Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> DeclList FuncList
Rule 2     Program -> DeclList
Rule 3     Program -> FuncList
Rule 4     Program -> <empty>
Rule 5     DeclList -> Declaration
Rule 6     DeclList -> DeclList Declaration
Rule 7     FuncList -> Function
Rule 8     FuncList -> FuncList Function
Rule 9     Declaration -> Type IdentList SEMICOLON
Rule 10    IdentList -> identifier
Rule 11    IdentList -> IdentList COMMA identifier
Rule 12    identifier -> ID
Rule 13    identifier -> ID LBRK INTNUM RBRK
Rule 14    Function -> Type ID LPAREN RPAREN CompoundStmt
Rule 15    Function -> Type ID LPAREN ParamList RPAREN CompoundStmt
Rule 16    ParamList -> Type identifier
Rule 17    ParamList -> ParamList COMMA Type identifier
Rule 18    Type -> INT
Rule 19    Type -> FLOAT
Rule 20    CompoundStmt -> LBRACE DeclList StmtList RBRACE
Rule 21    CompoundStmt -> LBRACE StmtList RBRACE
Rule 22    StmtList -> Stmt StmtList
Rule 23    StmtList -> <empty>
Rule 24    Stmt -> AssignStmt
Rule 25    Stmt -> CallStmt
Rule 26    Stmt -> RetStmt
Rule 27    Stmt -> WhileStmt
Rule 28    Stmt -> ForStmt
Rule 29    Stmt -> IfStmt
Rule 30    Stmt -> SwitchStmt
Rule 31    Stmt -> CompoundStmt
Rule 32    Stmt -> SEMICOLON
Rule 33    AssignStmt -> Assign SEMICOLON
Rule 34    Assign -> ID EQUALS Expr
Rule 35    Assign -> ID LBRK Expr RBRK EQUALS Expr
Rule 36    CallStmt -> Call SEMICOLON
Rule 37    Call -> ID LPAREN ArgList RPAREN
Rule 38    Call -> ID LPAREN RPAREN
Rule 39    RetStmt -> RETURN SEMICOLON
Rule 40    RetStmt -> RETURN Expr SEMICOLON
Rule 41    WhileStmt -> WHILE LPAREN Expr RPAREN Stmt
Rule 42    WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
Rule 43    ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
Rule 44    IfStmt -> IF LPAREN Expr RPAREN Stmt
Rule 45    IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt
Rule 46    SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
Rule 47    CaseList -> CaseStmt CaseList
Rule 48    CaseList -> DefaultStmt
Rule 49    CaseList -> <empty>
Rule 50    CaseStmt -> CASE INTNUM COLON StmtList BREAK SEMICOLON
Rule 51    CaseStmt -> CASE INTNUM COLON StmtList
Rule 52    DefaultStmt -> DEFAULT COLON StmtList BREAK SEMICOLON
Rule 53    DefaultStmt -> DEFAULT COLON StmtList
Rule 54    Expr -> Unop
Rule 55    Expr -> Bioperation
Rule 56    Expr -> Call
Rule 57    Expr -> INTNUM
Rule 58    Expr -> FLOATNUM
Rule 59    Expr -> ID
Rule 60    Expr -> ID LBRK Expr RBRK
Rule 61    Expr -> LPAREN Expr RPAREN
Rule 62    Unop -> MINUS Expr
Rule 63    Bioperation -> Expr PLUS Expr
Rule 64    Bioperation -> Expr MINUS Expr
Rule 65    Bioperation -> Expr TIMES Expr
Rule 66    Bioperation -> Expr DIVIDE Expr
Rule 67    Bioperation -> Expr GT Expr
Rule 68    Bioperation -> Expr LT Expr
Rule 69    Bioperation -> Expr GE Expr
Rule 70    Bioperation -> Expr LE Expr
Rule 71    Bioperation -> Expr EQ Expr
Rule 72    Bioperation -> Expr NE Expr
Rule 73    ArgList -> Expr
Rule 74    ArgList -> ArgList COMMA Expr

Terminals, with rules where they appear

BREAK                : 50 52
CASE                 : 50 51
COLON                : 50 51 52 53
COMMA                : 11 17 74
DEFAULT              : 52 53
DIVIDE               : 66
DO                   : 42
ELSE                 : 45
EQ                   : 71
EQUALS               : 34 35
FLOAT                : 19
FLOATNUM             : 58
FOR                  : 43
GE                   : 69
GT                   : 67
ID                   : 12 13 14 15 34 35 37 38 59 60
IF                   : 44 45
INT                  : 18
INTNUM               : 13 50 51 57
LBRACE               : 20 21 46
LBRK                 : 13 35 60
LE                   : 70
LPAREN               : 14 15 37 38 41 42 43 44 45 46 61
LT                   : 68
MINUS                : 62 64
NE                   : 72
PLUS                 : 63
RBRACE               : 20 21 46
RBRK                 : 13 35 60
RETURN               : 39 40
RPAREN               : 14 15 37 38 41 42 43 44 45 46 61
SEMICOLON            : 9 32 33 36 39 40 42 43 43 50 52
SWITCH               : 46
TIMES                : 65
WHILE                : 41 42
error                : 

Nonterminals, with rules where they appear

ArgList              : 37 74
Assign               : 33 43 43
AssignStmt           : 24
Bioperation          : 55
Call                 : 36 56
CallStmt             : 25
CaseList             : 46 47
CaseStmt             : 47
CompoundStmt         : 14 15 31
DeclList             : 1 2 6 20
Declaration          : 5 6
DefaultStmt          : 48
Expr                 : 34 35 35 40 41 42 43 44 45 60 61 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 74
ForStmt              : 28
FuncList             : 1 3 8
Function             : 7 8
IdentList            : 9 11
IfStmt               : 29
ParamList            : 15 17
Program              : 0
RetStmt              : 26
Stmt                 : 22 41 42 43 44 45 45
StmtList             : 20 21 22 50 51 52 53
SwitchStmt           : 30
Type                 : 9 14 15 16 17
Unop                 : 54
WhileStmt            : 27
identifier           : 10 11 16 17 46

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . DeclList FuncList
    (2) Program -> . DeclList
    (3) Program -> . FuncList
    (4) Program -> .
    (5) DeclList -> . Declaration
    (6) DeclList -> . DeclList Declaration
    (7) FuncList -> . Function
    (8) FuncList -> . FuncList Function
    (9) Declaration -> . Type IdentList SEMICOLON
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 4 (Program -> .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 2

    Declaration                    shift and go to state 1
    Function                       shift and go to state 8
    DeclList                       shift and go to state 4
    Type                           shift and go to state 3
    FuncList                       shift and go to state 5
    Program                        shift and go to state 6

state 1

    (5) DeclList -> Declaration .

    SEMICOLON       reduce using rule 5 (DeclList -> Declaration .)
    INT             reduce using rule 5 (DeclList -> Declaration .)
    FLOAT           reduce using rule 5 (DeclList -> Declaration .)
    RETURN          reduce using rule 5 (DeclList -> Declaration .)
    WHILE           reduce using rule 5 (DeclList -> Declaration .)
    DO              reduce using rule 5 (DeclList -> Declaration .)
    FOR             reduce using rule 5 (DeclList -> Declaration .)
    IF              reduce using rule 5 (DeclList -> Declaration .)
    SWITCH          reduce using rule 5 (DeclList -> Declaration .)
    LBRACE          reduce using rule 5 (DeclList -> Declaration .)
    ID              reduce using rule 5 (DeclList -> Declaration .)
    RBRACE          reduce using rule 5 (DeclList -> Declaration .)
    $end            reduce using rule 5 (DeclList -> Declaration .)


state 2

    (19) Type -> FLOAT .

    ID              reduce using rule 19 (Type -> FLOAT .)


state 3

    (9) Declaration -> Type . IdentList SEMICOLON
    (14) Function -> Type . ID LPAREN RPAREN CompoundStmt
    (15) Function -> Type . ID LPAREN ParamList RPAREN CompoundStmt
    (10) IdentList -> . identifier
    (11) IdentList -> . IdentList COMMA identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 10

    identifier                     shift and go to state 9
    IdentList                      shift and go to state 11

state 4

    (1) Program -> DeclList . FuncList
    (2) Program -> DeclList .
    (6) DeclList -> DeclList . Declaration
    (7) FuncList -> . Function
    (8) FuncList -> . FuncList Function
    (9) Declaration -> . Type IdentList SEMICOLON
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 2 (Program -> DeclList .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 2

    Declaration                    shift and go to state 12
    Type                           shift and go to state 3
    Function                       shift and go to state 8
    FuncList                       shift and go to state 13

state 5

    (3) Program -> FuncList .
    (8) FuncList -> FuncList . Function
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 3 (Program -> FuncList .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 2

    Type                           shift and go to state 14
    Function                       shift and go to state 15

state 6

    (0) S' -> Program .



state 7

    (18) Type -> INT .

    ID              reduce using rule 18 (Type -> INT .)


state 8

    (7) FuncList -> Function .

    INT             reduce using rule 7 (FuncList -> Function .)
    FLOAT           reduce using rule 7 (FuncList -> Function .)
    $end            reduce using rule 7 (FuncList -> Function .)


state 9

    (10) IdentList -> identifier .

    SEMICOLON       reduce using rule 10 (IdentList -> identifier .)
    COMMA           reduce using rule 10 (IdentList -> identifier .)


state 10

    (14) Function -> Type ID . LPAREN RPAREN CompoundStmt
    (15) Function -> Type ID . LPAREN ParamList RPAREN CompoundStmt
    (12) identifier -> ID .
    (13) identifier -> ID . LBRK INTNUM RBRK

    LPAREN          shift and go to state 16
    SEMICOLON       reduce using rule 12 (identifier -> ID .)
    COMMA           reduce using rule 12 (identifier -> ID .)
    LBRK            shift and go to state 17


state 11

    (9) Declaration -> Type IdentList . SEMICOLON
    (11) IdentList -> IdentList . COMMA identifier

    SEMICOLON       shift and go to state 19
    COMMA           shift and go to state 18


state 12

    (6) DeclList -> DeclList Declaration .

    SEMICOLON       reduce using rule 6 (DeclList -> DeclList Declaration .)
    INT             reduce using rule 6 (DeclList -> DeclList Declaration .)
    FLOAT           reduce using rule 6 (DeclList -> DeclList Declaration .)
    RETURN          reduce using rule 6 (DeclList -> DeclList Declaration .)
    WHILE           reduce using rule 6 (DeclList -> DeclList Declaration .)
    DO              reduce using rule 6 (DeclList -> DeclList Declaration .)
    FOR             reduce using rule 6 (DeclList -> DeclList Declaration .)
    IF              reduce using rule 6 (DeclList -> DeclList Declaration .)
    SWITCH          reduce using rule 6 (DeclList -> DeclList Declaration .)
    LBRACE          reduce using rule 6 (DeclList -> DeclList Declaration .)
    ID              reduce using rule 6 (DeclList -> DeclList Declaration .)
    RBRACE          reduce using rule 6 (DeclList -> DeclList Declaration .)
    $end            reduce using rule 6 (DeclList -> DeclList Declaration .)


state 13

    (1) Program -> DeclList FuncList .
    (8) FuncList -> FuncList . Function
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 1 (Program -> DeclList FuncList .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 2

    Type                           shift and go to state 14
    Function                       shift and go to state 15

state 14

    (14) Function -> Type . ID LPAREN RPAREN CompoundStmt
    (15) Function -> Type . ID LPAREN ParamList RPAREN CompoundStmt

    ID              shift and go to state 20


state 15

    (8) FuncList -> FuncList Function .

    INT             reduce using rule 8 (FuncList -> FuncList Function .)
    FLOAT           reduce using rule 8 (FuncList -> FuncList Function .)
    $end            reduce using rule 8 (FuncList -> FuncList Function .)


state 16

    (14) Function -> Type ID LPAREN . RPAREN CompoundStmt
    (15) Function -> Type ID LPAREN . ParamList RPAREN CompoundStmt
    (16) ParamList -> . Type identifier
    (17) ParamList -> . ParamList COMMA Type identifier
    (18) Type -> . INT
    (19) Type -> . FLOAT

    RPAREN          shift and go to state 23
    INT             shift and go to state 7
    FLOAT           shift and go to state 2

    ParamList                      shift and go to state 21
    Type                           shift and go to state 22

state 17

    (13) identifier -> ID LBRK . INTNUM RBRK

    INTNUM          shift and go to state 24


state 18

    (11) IdentList -> IdentList COMMA . identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 26

    identifier                     shift and go to state 25

state 19

    (9) Declaration -> Type IdentList SEMICOLON .

    INT             reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    FLOAT           reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    $end            reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    SEMICOLON       reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    RETURN          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    WHILE           reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    DO              reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    FOR             reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    IF              reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    SWITCH          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    LBRACE          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    ID              reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    RBRACE          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)


state 20

    (14) Function -> Type ID . LPAREN RPAREN CompoundStmt
    (15) Function -> Type ID . LPAREN ParamList RPAREN CompoundStmt

    LPAREN          shift and go to state 16


state 21

    (15) Function -> Type ID LPAREN ParamList . RPAREN CompoundStmt
    (17) ParamList -> ParamList . COMMA Type identifier

    RPAREN          shift and go to state 27
    COMMA           shift and go to state 28


state 22

    (16) ParamList -> Type . identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 26

    identifier                     shift and go to state 29

state 23

    (14) Function -> Type ID LPAREN RPAREN . CompoundStmt
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 30

    CompoundStmt                   shift and go to state 31

state 24

    (13) identifier -> ID LBRK INTNUM . RBRK

    RBRK            shift and go to state 32


state 25

    (11) IdentList -> IdentList COMMA identifier .

    SEMICOLON       reduce using rule 11 (IdentList -> IdentList COMMA identifier .)
    COMMA           reduce using rule 11 (IdentList -> IdentList COMMA identifier .)


state 26

    (12) identifier -> ID .
    (13) identifier -> ID . LBRK INTNUM RBRK

    RPAREN          reduce using rule 12 (identifier -> ID .)
    COMMA           reduce using rule 12 (identifier -> ID .)
    SEMICOLON       reduce using rule 12 (identifier -> ID .)
    LBRK            shift and go to state 17


state 27

    (15) Function -> Type ID LPAREN ParamList RPAREN . CompoundStmt
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 30

    CompoundStmt                   shift and go to state 33

state 28

    (17) ParamList -> ParamList COMMA . Type identifier
    (18) Type -> . INT
    (19) Type -> . FLOAT

    INT             shift and go to state 7
    FLOAT           shift and go to state 2

    Type                           shift and go to state 34

state 29

    (16) ParamList -> Type identifier .

    RPAREN          reduce using rule 16 (ParamList -> Type identifier .)
    COMMA           reduce using rule 16 (ParamList -> Type identifier .)


state 30

    (20) CompoundStmt -> LBRACE . DeclList StmtList RBRACE
    (21) CompoundStmt -> LBRACE . StmtList RBRACE
    (5) DeclList -> . Declaration
    (6) DeclList -> . DeclList Declaration
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (9) Declaration -> . Type IdentList SEMICOLON
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (18) Type -> . INT
    (19) Type -> . FLOAT
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RBRACE          reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 44
    INT             shift and go to state 7
    FLOAT           shift and go to state 2
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    Declaration                    shift and go to state 1
    Stmt                           shift and go to state 37
    Type                           shift and go to state 48
    DeclList                       shift and go to state 49
    WhileStmt                      shift and go to state 50
    CompoundStmt                   shift and go to state 51
    ForStmt                        shift and go to state 52
    Assign                         shift and go to state 41
    StmtList                       shift and go to state 39
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    SwitchStmt                     shift and go to state 35
    RetStmt                        shift and go to state 55
    IfStmt                         shift and go to state 47

state 31

    (14) Function -> Type ID LPAREN RPAREN CompoundStmt .

    INT             reduce using rule 14 (Function -> Type ID LPAREN RPAREN CompoundStmt .)
    FLOAT           reduce using rule 14 (Function -> Type ID LPAREN RPAREN CompoundStmt .)
    $end            reduce using rule 14 (Function -> Type ID LPAREN RPAREN CompoundStmt .)


state 32

    (13) identifier -> ID LBRK INTNUM RBRK .

    RPAREN          reduce using rule 13 (identifier -> ID LBRK INTNUM RBRK .)
    COMMA           reduce using rule 13 (identifier -> ID LBRK INTNUM RBRK .)
    SEMICOLON       reduce using rule 13 (identifier -> ID LBRK INTNUM RBRK .)


state 33

    (15) Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .

    INT             reduce using rule 15 (Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .)
    FLOAT           reduce using rule 15 (Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .)
    $end            reduce using rule 15 (Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .)


state 34

    (17) ParamList -> ParamList COMMA Type . identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 26

    identifier                     shift and go to state 57

state 35

    (30) Stmt -> SwitchStmt .

    SEMICOLON       reduce using rule 30 (Stmt -> SwitchStmt .)
    RETURN          reduce using rule 30 (Stmt -> SwitchStmt .)
    WHILE           reduce using rule 30 (Stmt -> SwitchStmt .)
    DO              reduce using rule 30 (Stmt -> SwitchStmt .)
    FOR             reduce using rule 30 (Stmt -> SwitchStmt .)
    IF              reduce using rule 30 (Stmt -> SwitchStmt .)
    SWITCH          reduce using rule 30 (Stmt -> SwitchStmt .)
    LBRACE          reduce using rule 30 (Stmt -> SwitchStmt .)
    ID              reduce using rule 30 (Stmt -> SwitchStmt .)
    RBRACE          reduce using rule 30 (Stmt -> SwitchStmt .)
    BREAK           reduce using rule 30 (Stmt -> SwitchStmt .)
    CASE            reduce using rule 30 (Stmt -> SwitchStmt .)
    DEFAULT         reduce using rule 30 (Stmt -> SwitchStmt .)
    ELSE            reduce using rule 30 (Stmt -> SwitchStmt .)


state 36

    (46) SwitchStmt -> SWITCH . LPAREN identifier RPAREN LBRACE CaseList RBRACE

    LPAREN          shift and go to state 58


state 37

    (22) StmtList -> Stmt . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RBRACE          reduce using rule 23 (StmtList -> .)
    BREAK           reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    DEFAULT         reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    StmtList                       shift and go to state 59
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 37

state 38

    (43) ForStmt -> FOR . LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt

    LPAREN          shift and go to state 60


state 39

    (21) CompoundStmt -> LBRACE StmtList . RBRACE

    RBRACE          shift and go to state 61


state 40

    (34) Assign -> ID . EQUALS Expr
    (35) Assign -> ID . LBRK Expr RBRK EQUALS Expr
    (37) Call -> ID . LPAREN ArgList RPAREN
    (38) Call -> ID . LPAREN RPAREN

    EQUALS          shift and go to state 63
    LBRK            shift and go to state 64
    LPAREN          shift and go to state 62


state 41

    (33) AssignStmt -> Assign . SEMICOLON

    SEMICOLON       shift and go to state 65


state 42

    (41) WhileStmt -> WHILE . LPAREN Expr RPAREN Stmt

    LPAREN          shift and go to state 66


state 43

    (42) WhileStmt -> DO . Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 67

state 44

    (32) Stmt -> SEMICOLON .

    SEMICOLON       reduce using rule 32 (Stmt -> SEMICOLON .)
    RETURN          reduce using rule 32 (Stmt -> SEMICOLON .)
    WHILE           reduce using rule 32 (Stmt -> SEMICOLON .)
    DO              reduce using rule 32 (Stmt -> SEMICOLON .)
    FOR             reduce using rule 32 (Stmt -> SEMICOLON .)
    IF              reduce using rule 32 (Stmt -> SEMICOLON .)
    SWITCH          reduce using rule 32 (Stmt -> SEMICOLON .)
    LBRACE          reduce using rule 32 (Stmt -> SEMICOLON .)
    ID              reduce using rule 32 (Stmt -> SEMICOLON .)
    RBRACE          reduce using rule 32 (Stmt -> SEMICOLON .)
    BREAK           reduce using rule 32 (Stmt -> SEMICOLON .)
    CASE            reduce using rule 32 (Stmt -> SEMICOLON .)
    DEFAULT         reduce using rule 32 (Stmt -> SEMICOLON .)
    ELSE            reduce using rule 32 (Stmt -> SEMICOLON .)


state 45

    (25) Stmt -> CallStmt .

    SEMICOLON       reduce using rule 25 (Stmt -> CallStmt .)
    RETURN          reduce using rule 25 (Stmt -> CallStmt .)
    WHILE           reduce using rule 25 (Stmt -> CallStmt .)
    DO              reduce using rule 25 (Stmt -> CallStmt .)
    FOR             reduce using rule 25 (Stmt -> CallStmt .)
    IF              reduce using rule 25 (Stmt -> CallStmt .)
    SWITCH          reduce using rule 25 (Stmt -> CallStmt .)
    LBRACE          reduce using rule 25 (Stmt -> CallStmt .)
    ID              reduce using rule 25 (Stmt -> CallStmt .)
    RBRACE          reduce using rule 25 (Stmt -> CallStmt .)
    BREAK           reduce using rule 25 (Stmt -> CallStmt .)
    CASE            reduce using rule 25 (Stmt -> CallStmt .)
    DEFAULT         reduce using rule 25 (Stmt -> CallStmt .)
    ELSE            reduce using rule 25 (Stmt -> CallStmt .)


state 46

    (39) RetStmt -> RETURN . SEMICOLON
    (40) RetStmt -> RETURN . Expr SEMICOLON
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 72
    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 71

state 47

    (29) Stmt -> IfStmt .

    SEMICOLON       reduce using rule 29 (Stmt -> IfStmt .)
    RETURN          reduce using rule 29 (Stmt -> IfStmt .)
    WHILE           reduce using rule 29 (Stmt -> IfStmt .)
    DO              reduce using rule 29 (Stmt -> IfStmt .)
    FOR             reduce using rule 29 (Stmt -> IfStmt .)
    IF              reduce using rule 29 (Stmt -> IfStmt .)
    SWITCH          reduce using rule 29 (Stmt -> IfStmt .)
    LBRACE          reduce using rule 29 (Stmt -> IfStmt .)
    ID              reduce using rule 29 (Stmt -> IfStmt .)
    RBRACE          reduce using rule 29 (Stmt -> IfStmt .)
    BREAK           reduce using rule 29 (Stmt -> IfStmt .)
    CASE            reduce using rule 29 (Stmt -> IfStmt .)
    DEFAULT         reduce using rule 29 (Stmt -> IfStmt .)
    ELSE            reduce using rule 29 (Stmt -> IfStmt .)


state 48

    (9) Declaration -> Type . IdentList SEMICOLON
    (10) IdentList -> . identifier
    (11) IdentList -> . IdentList COMMA identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 26

    identifier                     shift and go to state 9
    IdentList                      shift and go to state 11

state 49

    (20) CompoundStmt -> LBRACE DeclList . StmtList RBRACE
    (6) DeclList -> DeclList . Declaration
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (9) Declaration -> . Type IdentList SEMICOLON
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (18) Type -> . INT
    (19) Type -> . FLOAT
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RBRACE          reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 44
    INT             shift and go to state 7
    FLOAT           shift and go to state 2
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    Declaration                    shift and go to state 12
    Stmt                           shift and go to state 37
    Type                           shift and go to state 48
    WhileStmt                      shift and go to state 50
    CompoundStmt                   shift and go to state 51
    ForStmt                        shift and go to state 52
    Assign                         shift and go to state 41
    StmtList                       shift and go to state 78
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    SwitchStmt                     shift and go to state 35
    RetStmt                        shift and go to state 55
    IfStmt                         shift and go to state 47

state 50

    (27) Stmt -> WhileStmt .

    SEMICOLON       reduce using rule 27 (Stmt -> WhileStmt .)
    RETURN          reduce using rule 27 (Stmt -> WhileStmt .)
    WHILE           reduce using rule 27 (Stmt -> WhileStmt .)
    DO              reduce using rule 27 (Stmt -> WhileStmt .)
    FOR             reduce using rule 27 (Stmt -> WhileStmt .)
    IF              reduce using rule 27 (Stmt -> WhileStmt .)
    SWITCH          reduce using rule 27 (Stmt -> WhileStmt .)
    LBRACE          reduce using rule 27 (Stmt -> WhileStmt .)
    ID              reduce using rule 27 (Stmt -> WhileStmt .)
    RBRACE          reduce using rule 27 (Stmt -> WhileStmt .)
    BREAK           reduce using rule 27 (Stmt -> WhileStmt .)
    CASE            reduce using rule 27 (Stmt -> WhileStmt .)
    DEFAULT         reduce using rule 27 (Stmt -> WhileStmt .)
    ELSE            reduce using rule 27 (Stmt -> WhileStmt .)


state 51

    (31) Stmt -> CompoundStmt .

    SEMICOLON       reduce using rule 31 (Stmt -> CompoundStmt .)
    RETURN          reduce using rule 31 (Stmt -> CompoundStmt .)
    WHILE           reduce using rule 31 (Stmt -> CompoundStmt .)
    DO              reduce using rule 31 (Stmt -> CompoundStmt .)
    FOR             reduce using rule 31 (Stmt -> CompoundStmt .)
    IF              reduce using rule 31 (Stmt -> CompoundStmt .)
    SWITCH          reduce using rule 31 (Stmt -> CompoundStmt .)
    LBRACE          reduce using rule 31 (Stmt -> CompoundStmt .)
    ID              reduce using rule 31 (Stmt -> CompoundStmt .)
    RBRACE          reduce using rule 31 (Stmt -> CompoundStmt .)
    BREAK           reduce using rule 31 (Stmt -> CompoundStmt .)
    CASE            reduce using rule 31 (Stmt -> CompoundStmt .)
    DEFAULT         reduce using rule 31 (Stmt -> CompoundStmt .)
    ELSE            reduce using rule 31 (Stmt -> CompoundStmt .)


state 52

    (28) Stmt -> ForStmt .

    SEMICOLON       reduce using rule 28 (Stmt -> ForStmt .)
    RETURN          reduce using rule 28 (Stmt -> ForStmt .)
    WHILE           reduce using rule 28 (Stmt -> ForStmt .)
    DO              reduce using rule 28 (Stmt -> ForStmt .)
    FOR             reduce using rule 28 (Stmt -> ForStmt .)
    IF              reduce using rule 28 (Stmt -> ForStmt .)
    SWITCH          reduce using rule 28 (Stmt -> ForStmt .)
    LBRACE          reduce using rule 28 (Stmt -> ForStmt .)
    ID              reduce using rule 28 (Stmt -> ForStmt .)
    RBRACE          reduce using rule 28 (Stmt -> ForStmt .)
    BREAK           reduce using rule 28 (Stmt -> ForStmt .)
    CASE            reduce using rule 28 (Stmt -> ForStmt .)
    DEFAULT         reduce using rule 28 (Stmt -> ForStmt .)
    ELSE            reduce using rule 28 (Stmt -> ForStmt .)


state 53

    (44) IfStmt -> IF . LPAREN Expr RPAREN Stmt
    (45) IfStmt -> IF . LPAREN Expr RPAREN Stmt ELSE Stmt

    LPAREN          shift and go to state 79


state 54

    (36) CallStmt -> Call . SEMICOLON

    SEMICOLON       shift and go to state 80


state 55

    (26) Stmt -> RetStmt .

    SEMICOLON       reduce using rule 26 (Stmt -> RetStmt .)
    RETURN          reduce using rule 26 (Stmt -> RetStmt .)
    WHILE           reduce using rule 26 (Stmt -> RetStmt .)
    DO              reduce using rule 26 (Stmt -> RetStmt .)
    FOR             reduce using rule 26 (Stmt -> RetStmt .)
    IF              reduce using rule 26 (Stmt -> RetStmt .)
    SWITCH          reduce using rule 26 (Stmt -> RetStmt .)
    LBRACE          reduce using rule 26 (Stmt -> RetStmt .)
    ID              reduce using rule 26 (Stmt -> RetStmt .)
    RBRACE          reduce using rule 26 (Stmt -> RetStmt .)
    BREAK           reduce using rule 26 (Stmt -> RetStmt .)
    CASE            reduce using rule 26 (Stmt -> RetStmt .)
    DEFAULT         reduce using rule 26 (Stmt -> RetStmt .)
    ELSE            reduce using rule 26 (Stmt -> RetStmt .)


state 56

    (24) Stmt -> AssignStmt .

    SEMICOLON       reduce using rule 24 (Stmt -> AssignStmt .)
    RETURN          reduce using rule 24 (Stmt -> AssignStmt .)
    WHILE           reduce using rule 24 (Stmt -> AssignStmt .)
    DO              reduce using rule 24 (Stmt -> AssignStmt .)
    FOR             reduce using rule 24 (Stmt -> AssignStmt .)
    IF              reduce using rule 24 (Stmt -> AssignStmt .)
    SWITCH          reduce using rule 24 (Stmt -> AssignStmt .)
    LBRACE          reduce using rule 24 (Stmt -> AssignStmt .)
    ID              reduce using rule 24 (Stmt -> AssignStmt .)
    RBRACE          reduce using rule 24 (Stmt -> AssignStmt .)
    BREAK           reduce using rule 24 (Stmt -> AssignStmt .)
    CASE            reduce using rule 24 (Stmt -> AssignStmt .)
    DEFAULT         reduce using rule 24 (Stmt -> AssignStmt .)
    ELSE            reduce using rule 24 (Stmt -> AssignStmt .)


state 57

    (17) ParamList -> ParamList COMMA Type identifier .

    RPAREN          reduce using rule 17 (ParamList -> ParamList COMMA Type identifier .)
    COMMA           reduce using rule 17 (ParamList -> ParamList COMMA Type identifier .)


state 58

    (46) SwitchStmt -> SWITCH LPAREN . identifier RPAREN LBRACE CaseList RBRACE
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 26

    identifier                     shift and go to state 81

state 59

    (22) StmtList -> Stmt StmtList .

    RBRACE          reduce using rule 22 (StmtList -> Stmt StmtList .)
    BREAK           reduce using rule 22 (StmtList -> Stmt StmtList .)
    CASE            reduce using rule 22 (StmtList -> Stmt StmtList .)
    DEFAULT         reduce using rule 22 (StmtList -> Stmt StmtList .)


state 60

    (43) ForStmt -> FOR LPAREN . Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr

    ID              shift and go to state 82

    Assign                         shift and go to state 83

state 61

    (21) CompoundStmt -> LBRACE StmtList RBRACE .

    SEMICOLON       reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    RETURN          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    WHILE           reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    DO              reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    FOR             reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    IF              reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    SWITCH          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    LBRACE          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    ID              reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    BREAK           reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    CASE            reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    INT             reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    FLOAT           reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    $end            reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    ELSE            reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)


state 62

    (37) Call -> ID LPAREN . ArgList RPAREN
    (38) Call -> ID LPAREN . RPAREN
    (73) ArgList -> . Expr
    (74) ArgList -> . ArgList COMMA Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 86
    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    ArgList                        shift and go to state 84
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 85
    Bioperation                    shift and go to state 73

state 63

    (34) Assign -> ID EQUALS . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 87

state 64

    (35) Assign -> ID LBRK . Expr RBRK EQUALS Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 88

state 65

    (33) AssignStmt -> Assign SEMICOLON .

    SEMICOLON       reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    RETURN          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    WHILE           reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    DO              reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    FOR             reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    IF              reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    SWITCH          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    LBRACE          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    ID              reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    RBRACE          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    BREAK           reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    CASE            reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    DEFAULT         reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    ELSE            reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)


state 66

    (41) WhileStmt -> WHILE LPAREN . Expr RPAREN Stmt
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 89

state 67

    (42) WhileStmt -> DO Stmt . WHILE LPAREN Expr RPAREN SEMICOLON

    WHILE           shift and go to state 90


state 68

    (57) Expr -> INTNUM .

    PLUS            reduce using rule 57 (Expr -> INTNUM .)
    MINUS           reduce using rule 57 (Expr -> INTNUM .)
    TIMES           reduce using rule 57 (Expr -> INTNUM .)
    DIVIDE          reduce using rule 57 (Expr -> INTNUM .)
    GT              reduce using rule 57 (Expr -> INTNUM .)
    LT              reduce using rule 57 (Expr -> INTNUM .)
    GE              reduce using rule 57 (Expr -> INTNUM .)
    LE              reduce using rule 57 (Expr -> INTNUM .)
    EQ              reduce using rule 57 (Expr -> INTNUM .)
    NE              reduce using rule 57 (Expr -> INTNUM .)
    RPAREN          reduce using rule 57 (Expr -> INTNUM .)
    COMMA           reduce using rule 57 (Expr -> INTNUM .)
    SEMICOLON       reduce using rule 57 (Expr -> INTNUM .)
    RBRK            reduce using rule 57 (Expr -> INTNUM .)


state 69

    (59) Expr -> ID .
    (60) Expr -> ID . LBRK Expr RBRK
    (37) Call -> ID . LPAREN ArgList RPAREN
    (38) Call -> ID . LPAREN RPAREN

    PLUS            reduce using rule 59 (Expr -> ID .)
    MINUS           reduce using rule 59 (Expr -> ID .)
    TIMES           reduce using rule 59 (Expr -> ID .)
    DIVIDE          reduce using rule 59 (Expr -> ID .)
    GT              reduce using rule 59 (Expr -> ID .)
    LT              reduce using rule 59 (Expr -> ID .)
    GE              reduce using rule 59 (Expr -> ID .)
    LE              reduce using rule 59 (Expr -> ID .)
    EQ              reduce using rule 59 (Expr -> ID .)
    NE              reduce using rule 59 (Expr -> ID .)
    RPAREN          reduce using rule 59 (Expr -> ID .)
    COMMA           reduce using rule 59 (Expr -> ID .)
    SEMICOLON       reduce using rule 59 (Expr -> ID .)
    RBRK            reduce using rule 59 (Expr -> ID .)
    LBRK            shift and go to state 91
    LPAREN          shift and go to state 62


state 70

    (54) Expr -> Unop .

    PLUS            reduce using rule 54 (Expr -> Unop .)
    MINUS           reduce using rule 54 (Expr -> Unop .)
    TIMES           reduce using rule 54 (Expr -> Unop .)
    DIVIDE          reduce using rule 54 (Expr -> Unop .)
    GT              reduce using rule 54 (Expr -> Unop .)
    LT              reduce using rule 54 (Expr -> Unop .)
    GE              reduce using rule 54 (Expr -> Unop .)
    LE              reduce using rule 54 (Expr -> Unop .)
    EQ              reduce using rule 54 (Expr -> Unop .)
    NE              reduce using rule 54 (Expr -> Unop .)
    RPAREN          reduce using rule 54 (Expr -> Unop .)
    COMMA           reduce using rule 54 (Expr -> Unop .)
    SEMICOLON       reduce using rule 54 (Expr -> Unop .)
    RBRK            reduce using rule 54 (Expr -> Unop .)


state 71

    (40) RetStmt -> RETURN Expr . SEMICOLON
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    SEMICOLON       shift and go to state 102
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 72

    (39) RetStmt -> RETURN SEMICOLON .

    SEMICOLON       reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    RETURN          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    WHILE           reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    DO              reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    FOR             reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    IF              reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    ID              reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    BREAK           reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    CASE            reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    ELSE            reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)


state 73

    (55) Expr -> Bioperation .

    PLUS            reduce using rule 55 (Expr -> Bioperation .)
    MINUS           reduce using rule 55 (Expr -> Bioperation .)
    TIMES           reduce using rule 55 (Expr -> Bioperation .)
    DIVIDE          reduce using rule 55 (Expr -> Bioperation .)
    GT              reduce using rule 55 (Expr -> Bioperation .)
    LT              reduce using rule 55 (Expr -> Bioperation .)
    GE              reduce using rule 55 (Expr -> Bioperation .)
    LE              reduce using rule 55 (Expr -> Bioperation .)
    EQ              reduce using rule 55 (Expr -> Bioperation .)
    NE              reduce using rule 55 (Expr -> Bioperation .)
    RPAREN          reduce using rule 55 (Expr -> Bioperation .)
    COMMA           reduce using rule 55 (Expr -> Bioperation .)
    SEMICOLON       reduce using rule 55 (Expr -> Bioperation .)
    RBRK            reduce using rule 55 (Expr -> Bioperation .)


state 74

    (58) Expr -> FLOATNUM .

    PLUS            reduce using rule 58 (Expr -> FLOATNUM .)
    MINUS           reduce using rule 58 (Expr -> FLOATNUM .)
    TIMES           reduce using rule 58 (Expr -> FLOATNUM .)
    DIVIDE          reduce using rule 58 (Expr -> FLOATNUM .)
    GT              reduce using rule 58 (Expr -> FLOATNUM .)
    LT              reduce using rule 58 (Expr -> FLOATNUM .)
    GE              reduce using rule 58 (Expr -> FLOATNUM .)
    LE              reduce using rule 58 (Expr -> FLOATNUM .)
    EQ              reduce using rule 58 (Expr -> FLOATNUM .)
    NE              reduce using rule 58 (Expr -> FLOATNUM .)
    RPAREN          reduce using rule 58 (Expr -> FLOATNUM .)
    COMMA           reduce using rule 58 (Expr -> FLOATNUM .)
    SEMICOLON       reduce using rule 58 (Expr -> FLOATNUM .)
    RBRK            reduce using rule 58 (Expr -> FLOATNUM .)


state 75

    (61) Expr -> LPAREN . Expr RPAREN
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 103

state 76

    (56) Expr -> Call .

    PLUS            reduce using rule 56 (Expr -> Call .)
    MINUS           reduce using rule 56 (Expr -> Call .)
    TIMES           reduce using rule 56 (Expr -> Call .)
    DIVIDE          reduce using rule 56 (Expr -> Call .)
    GT              reduce using rule 56 (Expr -> Call .)
    LT              reduce using rule 56 (Expr -> Call .)
    GE              reduce using rule 56 (Expr -> Call .)
    LE              reduce using rule 56 (Expr -> Call .)
    EQ              reduce using rule 56 (Expr -> Call .)
    NE              reduce using rule 56 (Expr -> Call .)
    RPAREN          reduce using rule 56 (Expr -> Call .)
    COMMA           reduce using rule 56 (Expr -> Call .)
    SEMICOLON       reduce using rule 56 (Expr -> Call .)
    RBRK            reduce using rule 56 (Expr -> Call .)


state 77

    (62) Unop -> MINUS . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 104

state 78

    (20) CompoundStmt -> LBRACE DeclList StmtList . RBRACE

    RBRACE          shift and go to state 105


state 79

    (44) IfStmt -> IF LPAREN . Expr RPAREN Stmt
    (45) IfStmt -> IF LPAREN . Expr RPAREN Stmt ELSE Stmt
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 106

state 80

    (36) CallStmt -> Call SEMICOLON .

    SEMICOLON       reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    RETURN          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    WHILE           reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    DO              reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    FOR             reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    IF              reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    SWITCH          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    LBRACE          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    ID              reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    RBRACE          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    BREAK           reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    CASE            reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    DEFAULT         reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    ELSE            reduce using rule 36 (CallStmt -> Call SEMICOLON .)


state 81

    (46) SwitchStmt -> SWITCH LPAREN identifier . RPAREN LBRACE CaseList RBRACE

    RPAREN          shift and go to state 107


state 82

    (34) Assign -> ID . EQUALS Expr
    (35) Assign -> ID . LBRK Expr RBRK EQUALS Expr

    EQUALS          shift and go to state 63
    LBRK            shift and go to state 64


state 83

    (43) ForStmt -> FOR LPAREN Assign . SEMICOLON Expr SEMICOLON Assign RPAREN Stmt

    SEMICOLON       shift and go to state 108


state 84

    (37) Call -> ID LPAREN ArgList . RPAREN
    (74) ArgList -> ArgList . COMMA Expr

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 110


state 85

    (73) ArgList -> Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 73 (ArgList -> Expr .)
    COMMA           reduce using rule 73 (ArgList -> Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 86

    (38) Call -> ID LPAREN RPAREN .

    PLUS            reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    GT              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    LT              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    GE              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    LE              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    NE              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    RBRK            reduce using rule 38 (Call -> ID LPAREN RPAREN .)


state 87

    (34) Assign -> ID EQUALS Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 34 (Assign -> ID EQUALS Expr .)
    SEMICOLON       reduce using rule 34 (Assign -> ID EQUALS Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 88

    (35) Assign -> ID LBRK Expr . RBRK EQUALS Expr
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RBRK            shift and go to state 111
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 89

    (41) WhileStmt -> WHILE LPAREN Expr . RPAREN Stmt
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 90

    (42) WhileStmt -> DO Stmt WHILE . LPAREN Expr RPAREN SEMICOLON

    LPAREN          shift and go to state 113


state 91

    (60) Expr -> ID LBRK . Expr RBRK
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 114

state 92

    (63) Bioperation -> Expr PLUS . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 115

state 93

    (70) Bioperation -> Expr LE . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 116

state 94

    (72) Bioperation -> Expr NE . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 117

state 95

    (65) Bioperation -> Expr TIMES . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 118

state 96

    (67) Bioperation -> Expr GT . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 119

state 97

    (69) Bioperation -> Expr GE . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 120

state 98

    (66) Bioperation -> Expr DIVIDE . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 121

state 99

    (68) Bioperation -> Expr LT . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 122

state 100

    (71) Bioperation -> Expr EQ . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 123

state 101

    (64) Bioperation -> Expr MINUS . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 124

state 102

    (40) RetStmt -> RETURN Expr SEMICOLON .

    SEMICOLON       reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    RETURN          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    WHILE           reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    DO              reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    FOR             reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    IF              reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    SWITCH          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    LBRACE          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    ID              reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    RBRACE          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    BREAK           reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    CASE            reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    DEFAULT         reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    ELSE            reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)


state 103

    (61) Expr -> LPAREN Expr . RPAREN
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 125
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 104

    (62) Unop -> MINUS Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    PLUS            reduce using rule 62 (Unop -> MINUS Expr .)
    MINUS           reduce using rule 62 (Unop -> MINUS Expr .)
    TIMES           reduce using rule 62 (Unop -> MINUS Expr .)
    DIVIDE          reduce using rule 62 (Unop -> MINUS Expr .)
    GT              reduce using rule 62 (Unop -> MINUS Expr .)
    LT              reduce using rule 62 (Unop -> MINUS Expr .)
    GE              reduce using rule 62 (Unop -> MINUS Expr .)
    LE              reduce using rule 62 (Unop -> MINUS Expr .)
    EQ              reduce using rule 62 (Unop -> MINUS Expr .)
    NE              reduce using rule 62 (Unop -> MINUS Expr .)
    SEMICOLON       reduce using rule 62 (Unop -> MINUS Expr .)
    RPAREN          reduce using rule 62 (Unop -> MINUS Expr .)
    COMMA           reduce using rule 62 (Unop -> MINUS Expr .)
    RBRK            reduce using rule 62 (Unop -> MINUS Expr .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 101 ]
  ! TIMES           [ shift and go to state 95 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 105

    (20) CompoundStmt -> LBRACE DeclList StmtList RBRACE .

    SEMICOLON       reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    RETURN          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    WHILE           reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    DO              reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    FOR             reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    IF              reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    SWITCH          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    LBRACE          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    ID              reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    BREAK           reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    CASE            reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    DEFAULT         reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    RBRACE          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    INT             reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    FLOAT           reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    $end            reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    ELSE            reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)


state 106

    (44) IfStmt -> IF LPAREN Expr . RPAREN Stmt
    (45) IfStmt -> IF LPAREN Expr . RPAREN Stmt ELSE Stmt
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 126
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 107

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN . LBRACE CaseList RBRACE

    LBRACE          shift and go to state 127


state 108

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON . Expr SEMICOLON Assign RPAREN Stmt
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 128

state 109

    (37) Call -> ID LPAREN ArgList RPAREN .

    PLUS            reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    MINUS           reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    TIMES           reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    DIVIDE          reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    GT              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    LT              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    GE              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    LE              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    EQ              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    NE              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    SEMICOLON       reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    RPAREN          reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    COMMA           reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    RBRK            reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)


state 110

    (74) ArgList -> ArgList COMMA . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 129
    Bioperation                    shift and go to state 73

state 111

    (35) Assign -> ID LBRK Expr RBRK . EQUALS Expr

    EQUALS          shift and go to state 130


state 112

    (41) WhileStmt -> WHILE LPAREN Expr RPAREN . Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 131

state 113

    (42) WhileStmt -> DO Stmt WHILE LPAREN . Expr RPAREN SEMICOLON
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 132

state 114

    (60) Expr -> ID LBRK Expr . RBRK
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RBRK            shift and go to state 133
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 115

    (63) Bioperation -> Expr PLUS Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    PLUS            reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    MINUS           reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    GT              reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    LT              reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    GE              reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    LE              reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    EQ              reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    NE              reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    COMMA           reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    SEMICOLON       reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    RBRK            reduce using rule 63 (Bioperation -> Expr PLUS Expr .)
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98

  ! TIMES           [ reduce using rule 63 (Bioperation -> Expr PLUS Expr .) ]
  ! DIVIDE          [ reduce using rule 63 (Bioperation -> Expr PLUS Expr .) ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 101 ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 116

    (70) Bioperation -> Expr LE Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 70 (Bioperation -> Expr LE Expr .)
    GT              reduce using rule 70 (Bioperation -> Expr LE Expr .)
    LT              reduce using rule 70 (Bioperation -> Expr LE Expr .)
    GE              reduce using rule 70 (Bioperation -> Expr LE Expr .)
    LE              reduce using rule 70 (Bioperation -> Expr LE Expr .)
    EQ              reduce using rule 70 (Bioperation -> Expr LE Expr .)
    NE              reduce using rule 70 (Bioperation -> Expr LE Expr .)
    COMMA           reduce using rule 70 (Bioperation -> Expr LE Expr .)
    SEMICOLON       reduce using rule 70 (Bioperation -> Expr LE Expr .)
    RBRK            reduce using rule 70 (Bioperation -> Expr LE Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98

  ! PLUS            [ reduce using rule 70 (Bioperation -> Expr LE Expr .) ]
  ! MINUS           [ reduce using rule 70 (Bioperation -> Expr LE Expr .) ]
  ! TIMES           [ reduce using rule 70 (Bioperation -> Expr LE Expr .) ]
  ! DIVIDE          [ reduce using rule 70 (Bioperation -> Expr LE Expr .) ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 117

    (72) Bioperation -> Expr NE Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 72 (Bioperation -> Expr NE Expr .)
    EQ              reduce using rule 72 (Bioperation -> Expr NE Expr .)
    NE              reduce using rule 72 (Bioperation -> Expr NE Expr .)
    COMMA           reduce using rule 72 (Bioperation -> Expr NE Expr .)
    SEMICOLON       reduce using rule 72 (Bioperation -> Expr NE Expr .)
    RBRK            reduce using rule 72 (Bioperation -> Expr NE Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93

  ! PLUS            [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! MINUS           [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! TIMES           [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! DIVIDE          [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! GT              [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! LT              [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! GE              [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! LE              [ reduce using rule 72 (Bioperation -> Expr NE Expr .) ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 118

    (65) Bioperation -> Expr TIMES Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    PLUS            reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    MINUS           reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    TIMES           reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    DIVIDE          reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    GT              reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    LT              reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    GE              reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    LE              reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    EQ              reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    NE              reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    COMMA           reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    SEMICOLON       reduce using rule 65 (Bioperation -> Expr TIMES Expr .)
    RBRK            reduce using rule 65 (Bioperation -> Expr TIMES Expr .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 101 ]
  ! TIMES           [ shift and go to state 95 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 119

    (67) Bioperation -> Expr GT Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 67 (Bioperation -> Expr GT Expr .)
    GT              reduce using rule 67 (Bioperation -> Expr GT Expr .)
    LT              reduce using rule 67 (Bioperation -> Expr GT Expr .)
    GE              reduce using rule 67 (Bioperation -> Expr GT Expr .)
    LE              reduce using rule 67 (Bioperation -> Expr GT Expr .)
    EQ              reduce using rule 67 (Bioperation -> Expr GT Expr .)
    NE              reduce using rule 67 (Bioperation -> Expr GT Expr .)
    COMMA           reduce using rule 67 (Bioperation -> Expr GT Expr .)
    SEMICOLON       reduce using rule 67 (Bioperation -> Expr GT Expr .)
    RBRK            reduce using rule 67 (Bioperation -> Expr GT Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98

  ! PLUS            [ reduce using rule 67 (Bioperation -> Expr GT Expr .) ]
  ! MINUS           [ reduce using rule 67 (Bioperation -> Expr GT Expr .) ]
  ! TIMES           [ reduce using rule 67 (Bioperation -> Expr GT Expr .) ]
  ! DIVIDE          [ reduce using rule 67 (Bioperation -> Expr GT Expr .) ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 120

    (69) Bioperation -> Expr GE Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 69 (Bioperation -> Expr GE Expr .)
    GT              reduce using rule 69 (Bioperation -> Expr GE Expr .)
    LT              reduce using rule 69 (Bioperation -> Expr GE Expr .)
    GE              reduce using rule 69 (Bioperation -> Expr GE Expr .)
    LE              reduce using rule 69 (Bioperation -> Expr GE Expr .)
    EQ              reduce using rule 69 (Bioperation -> Expr GE Expr .)
    NE              reduce using rule 69 (Bioperation -> Expr GE Expr .)
    COMMA           reduce using rule 69 (Bioperation -> Expr GE Expr .)
    SEMICOLON       reduce using rule 69 (Bioperation -> Expr GE Expr .)
    RBRK            reduce using rule 69 (Bioperation -> Expr GE Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98

  ! PLUS            [ reduce using rule 69 (Bioperation -> Expr GE Expr .) ]
  ! MINUS           [ reduce using rule 69 (Bioperation -> Expr GE Expr .) ]
  ! TIMES           [ reduce using rule 69 (Bioperation -> Expr GE Expr .) ]
  ! DIVIDE          [ reduce using rule 69 (Bioperation -> Expr GE Expr .) ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 121

    (66) Bioperation -> Expr DIVIDE Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    PLUS            reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    MINUS           reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    TIMES           reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    DIVIDE          reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    GT              reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    LT              reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    GE              reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    LE              reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    EQ              reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    NE              reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    COMMA           reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    SEMICOLON       reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)
    RBRK            reduce using rule 66 (Bioperation -> Expr DIVIDE Expr .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 101 ]
  ! TIMES           [ shift and go to state 95 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 122

    (68) Bioperation -> Expr LT Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 68 (Bioperation -> Expr LT Expr .)
    GT              reduce using rule 68 (Bioperation -> Expr LT Expr .)
    LT              reduce using rule 68 (Bioperation -> Expr LT Expr .)
    GE              reduce using rule 68 (Bioperation -> Expr LT Expr .)
    LE              reduce using rule 68 (Bioperation -> Expr LT Expr .)
    EQ              reduce using rule 68 (Bioperation -> Expr LT Expr .)
    NE              reduce using rule 68 (Bioperation -> Expr LT Expr .)
    COMMA           reduce using rule 68 (Bioperation -> Expr LT Expr .)
    SEMICOLON       reduce using rule 68 (Bioperation -> Expr LT Expr .)
    RBRK            reduce using rule 68 (Bioperation -> Expr LT Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98

  ! PLUS            [ reduce using rule 68 (Bioperation -> Expr LT Expr .) ]
  ! MINUS           [ reduce using rule 68 (Bioperation -> Expr LT Expr .) ]
  ! TIMES           [ reduce using rule 68 (Bioperation -> Expr LT Expr .) ]
  ! DIVIDE          [ reduce using rule 68 (Bioperation -> Expr LT Expr .) ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 123

    (71) Bioperation -> Expr EQ Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 71 (Bioperation -> Expr EQ Expr .)
    EQ              reduce using rule 71 (Bioperation -> Expr EQ Expr .)
    NE              reduce using rule 71 (Bioperation -> Expr EQ Expr .)
    COMMA           reduce using rule 71 (Bioperation -> Expr EQ Expr .)
    SEMICOLON       reduce using rule 71 (Bioperation -> Expr EQ Expr .)
    RBRK            reduce using rule 71 (Bioperation -> Expr EQ Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93

  ! PLUS            [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! MINUS           [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! TIMES           [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! DIVIDE          [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! GT              [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! LT              [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! GE              [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! LE              [ reduce using rule 71 (Bioperation -> Expr EQ Expr .) ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 124

    (64) Bioperation -> Expr MINUS Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    PLUS            reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    MINUS           reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    GT              reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    LT              reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    GE              reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    LE              reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    EQ              reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    NE              reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    COMMA           reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    SEMICOLON       reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    RBRK            reduce using rule 64 (Bioperation -> Expr MINUS Expr .)
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98

  ! TIMES           [ reduce using rule 64 (Bioperation -> Expr MINUS Expr .) ]
  ! DIVIDE          [ reduce using rule 64 (Bioperation -> Expr MINUS Expr .) ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 101 ]
  ! GT              [ shift and go to state 96 ]
  ! LT              [ shift and go to state 99 ]
  ! GE              [ shift and go to state 97 ]
  ! LE              [ shift and go to state 93 ]
  ! EQ              [ shift and go to state 100 ]
  ! NE              [ shift and go to state 94 ]


state 125

    (61) Expr -> LPAREN Expr RPAREN .

    PLUS            reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    MINUS           reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    TIMES           reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    DIVIDE          reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    GT              reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    LT              reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    GE              reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    LE              reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    EQ              reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    NE              reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    RPAREN          reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    COMMA           reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)
    RBRK            reduce using rule 61 (Expr -> LPAREN Expr RPAREN .)


state 126

    (44) IfStmt -> IF LPAREN Expr RPAREN . Stmt
    (45) IfStmt -> IF LPAREN Expr RPAREN . Stmt ELSE Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 134

state 127

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE . CaseList RBRACE
    (47) CaseList -> . CaseStmt CaseList
    (48) CaseList -> . DefaultStmt
    (49) CaseList -> .
    (50) CaseStmt -> . CASE INTNUM COLON StmtList BREAK SEMICOLON
    (51) CaseStmt -> . CASE INTNUM COLON StmtList
    (52) DefaultStmt -> . DEFAULT COLON StmtList BREAK SEMICOLON
    (53) DefaultStmt -> . DEFAULT COLON StmtList

    RBRACE          reduce using rule 49 (CaseList -> .)
    CASE            shift and go to state 139
    DEFAULT         shift and go to state 135

    DefaultStmt                    shift and go to state 137
    CaseList                       shift and go to state 136
    CaseStmt                       shift and go to state 138

state 128

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr . SEMICOLON Assign RPAREN Stmt
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    SEMICOLON       shift and go to state 140
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 129

    (74) ArgList -> ArgList COMMA Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 74 (ArgList -> ArgList COMMA Expr .)
    COMMA           reduce using rule 74 (ArgList -> ArgList COMMA Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 130

    (35) Assign -> ID LBRK Expr RBRK EQUALS . Expr
    (54) Expr -> . Unop
    (55) Expr -> . Bioperation
    (56) Expr -> . Call
    (57) Expr -> . INTNUM
    (58) Expr -> . FLOATNUM
    (59) Expr -> . ID
    (60) Expr -> . ID LBRK Expr RBRK
    (61) Expr -> . LPAREN Expr RPAREN
    (62) Unop -> . MINUS Expr
    (63) Bioperation -> . Expr PLUS Expr
    (64) Bioperation -> . Expr MINUS Expr
    (65) Bioperation -> . Expr TIMES Expr
    (66) Bioperation -> . Expr DIVIDE Expr
    (67) Bioperation -> . Expr GT Expr
    (68) Bioperation -> . Expr LT Expr
    (69) Bioperation -> . Expr GE Expr
    (70) Bioperation -> . Expr LE Expr
    (71) Bioperation -> . Expr EQ Expr
    (72) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 68
    FLOATNUM        shift and go to state 74
    ID              shift and go to state 69
    LPAREN          shift and go to state 75
    MINUS           shift and go to state 77

    Bioperation                    shift and go to state 73
    Unop                           shift and go to state 70
    Call                           shift and go to state 76
    Expr                           shift and go to state 141

state 131

    (41) WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .

    SEMICOLON       reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    RETURN          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    WHILE           reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    DO              reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    FOR             reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    IF              reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    SWITCH          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    LBRACE          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    ID              reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    RBRACE          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    BREAK           reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    CASE            reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    DEFAULT         reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    ELSE            reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)


state 132

    (42) WhileStmt -> DO Stmt WHILE LPAREN Expr . RPAREN SEMICOLON
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 142
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 133

    (60) Expr -> ID LBRK Expr RBRK .

    PLUS            reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    MINUS           reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    TIMES           reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    DIVIDE          reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    GT              reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    LT              reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    GE              reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    LE              reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    EQ              reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    NE              reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    RPAREN          reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    COMMA           reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    SEMICOLON       reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)
    RBRK            reduce using rule 60 (Expr -> ID LBRK Expr RBRK .)


state 134

    (44) IfStmt -> IF LPAREN Expr RPAREN Stmt .
    (45) IfStmt -> IF LPAREN Expr RPAREN Stmt . ELSE Stmt

    SEMICOLON       reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    RETURN          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    WHILE           reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    DO              reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    FOR             reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    IF              reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    SWITCH          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    LBRACE          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    ID              reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    BREAK           reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    CASE            reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    DEFAULT         reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    RBRACE          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    ELSE            shift and go to state 143

  ! ELSE            [ reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .) ]


state 135

    (52) DefaultStmt -> DEFAULT . COLON StmtList BREAK SEMICOLON
    (53) DefaultStmt -> DEFAULT . COLON StmtList

    COLON           shift and go to state 144


state 136

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList . RBRACE

    RBRACE          shift and go to state 145


state 137

    (48) CaseList -> DefaultStmt .

    RBRACE          reduce using rule 48 (CaseList -> DefaultStmt .)


state 138

    (47) CaseList -> CaseStmt . CaseList
    (47) CaseList -> . CaseStmt CaseList
    (48) CaseList -> . DefaultStmt
    (49) CaseList -> .
    (50) CaseStmt -> . CASE INTNUM COLON StmtList BREAK SEMICOLON
    (51) CaseStmt -> . CASE INTNUM COLON StmtList
    (52) DefaultStmt -> . DEFAULT COLON StmtList BREAK SEMICOLON
    (53) DefaultStmt -> . DEFAULT COLON StmtList

    RBRACE          reduce using rule 49 (CaseList -> .)
    CASE            shift and go to state 139
    DEFAULT         shift and go to state 135

    DefaultStmt                    shift and go to state 137
    CaseList                       shift and go to state 146
    CaseStmt                       shift and go to state 138

state 139

    (50) CaseStmt -> CASE . INTNUM COLON StmtList BREAK SEMICOLON
    (51) CaseStmt -> CASE . INTNUM COLON StmtList

    INTNUM          shift and go to state 147


state 140

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON . Assign RPAREN Stmt
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr

    ID              shift and go to state 82

    Assign                         shift and go to state 148

state 141

    (35) Assign -> ID LBRK Expr RBRK EQUALS Expr .
    (63) Bioperation -> Expr . PLUS Expr
    (64) Bioperation -> Expr . MINUS Expr
    (65) Bioperation -> Expr . TIMES Expr
    (66) Bioperation -> Expr . DIVIDE Expr
    (67) Bioperation -> Expr . GT Expr
    (68) Bioperation -> Expr . LT Expr
    (69) Bioperation -> Expr . GE Expr
    (70) Bioperation -> Expr . LE Expr
    (71) Bioperation -> Expr . EQ Expr
    (72) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 35 (Assign -> ID LBRK Expr RBRK EQUALS Expr .)
    SEMICOLON       reduce using rule 35 (Assign -> ID LBRK Expr RBRK EQUALS Expr .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 101
    TIMES           shift and go to state 95
    DIVIDE          shift and go to state 98
    GT              shift and go to state 96
    LT              shift and go to state 99
    GE              shift and go to state 97
    LE              shift and go to state 93
    EQ              shift and go to state 100
    NE              shift and go to state 94


state 142

    (42) WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 149


state 143

    (45) IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE . Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 150

state 144

    (52) DefaultStmt -> DEFAULT COLON . StmtList BREAK SEMICOLON
    (53) DefaultStmt -> DEFAULT COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    StmtList                       shift and go to state 151
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 37

state 145

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .

    SEMICOLON       reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    RETURN          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    WHILE           reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    DO              reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    FOR             reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    IF              reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    SWITCH          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    LBRACE          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    ID              reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    BREAK           reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    CASE            reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    DEFAULT         reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    RBRACE          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    ELSE            reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)


state 146

    (47) CaseList -> CaseStmt CaseList .

    RBRACE          reduce using rule 47 (CaseList -> CaseStmt CaseList .)


state 147

    (50) CaseStmt -> CASE INTNUM . COLON StmtList BREAK SEMICOLON
    (51) CaseStmt -> CASE INTNUM . COLON StmtList

    COLON           shift and go to state 152


state 148

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign . RPAREN Stmt

    RPAREN          shift and go to state 153


state 149

    (42) WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    RETURN          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    WHILE           reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    DO              reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    FOR             reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    IF              reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    SWITCH          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    LBRACE          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    ID              reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    RBRACE          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    BREAK           reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    CASE            reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)
    ELSE            reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON .)


state 150

    (45) IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .

    SEMICOLON       reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    RETURN          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    WHILE           reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    DO              reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    FOR             reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    IF              reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    SWITCH          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    LBRACE          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    ID              reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    BREAK           reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    CASE            reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    DEFAULT         reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    RBRACE          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    ELSE            reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)


state 151

    (52) DefaultStmt -> DEFAULT COLON StmtList . BREAK SEMICOLON
    (53) DefaultStmt -> DEFAULT COLON StmtList .

    BREAK           shift and go to state 154
    RBRACE          reduce using rule 53 (DefaultStmt -> DEFAULT COLON StmtList .)


state 152

    (50) CaseStmt -> CASE INTNUM COLON . StmtList BREAK SEMICOLON
    (51) CaseStmt -> CASE INTNUM COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    DEFAULT         reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    StmtList                       shift and go to state 155
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 37

state 153

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN . Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN SEMICOLON
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 44
    RETURN          shift and go to state 46
    WHILE           shift and go to state 42
    DO              shift and go to state 43
    FOR             shift and go to state 38
    IF              shift and go to state 53
    SWITCH          shift and go to state 36
    LBRACE          shift and go to state 30
    ID              shift and go to state 40

    CallStmt                       shift and go to state 45
    SwitchStmt                     shift and go to state 35
    IfStmt                         shift and go to state 47
    CompoundStmt                   shift and go to state 51
    WhileStmt                      shift and go to state 50
    ForStmt                        shift and go to state 52
    Assign                         shift and go to state 41
    Call                           shift and go to state 54
    AssignStmt                     shift and go to state 56
    RetStmt                        shift and go to state 55
    Stmt                           shift and go to state 156

state 154

    (52) DefaultStmt -> DEFAULT COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 157


state 155

    (50) CaseStmt -> CASE INTNUM COLON StmtList . BREAK SEMICOLON
    (51) CaseStmt -> CASE INTNUM COLON StmtList .

    BREAK           shift and go to state 158
    CASE            reduce using rule 51 (CaseStmt -> CASE INTNUM COLON StmtList .)
    DEFAULT         reduce using rule 51 (CaseStmt -> CASE INTNUM COLON StmtList .)
    RBRACE          reduce using rule 51 (CaseStmt -> CASE INTNUM COLON StmtList .)


state 156

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .

    SEMICOLON       reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    RETURN          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    WHILE           reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    DO              reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    FOR             reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    IF              reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    SWITCH          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    LBRACE          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    ID              reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    RBRACE          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    BREAK           reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    CASE            reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    DEFAULT         reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    ELSE            reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)


state 157

    (52) DefaultStmt -> DEFAULT COLON StmtList BREAK SEMICOLON .

    RBRACE          reduce using rule 52 (DefaultStmt -> DEFAULT COLON StmtList BREAK SEMICOLON .)


state 158

    (50) CaseStmt -> CASE INTNUM COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 159


state 159

    (50) CaseStmt -> CASE INTNUM COLON StmtList BREAK SEMICOLON .

    CASE            reduce using rule 50 (CaseStmt -> CASE INTNUM COLON StmtList BREAK SEMICOLON .)
    DEFAULT         reduce using rule 50 (CaseStmt -> CASE INTNUM COLON StmtList BREAK SEMICOLON .)
    RBRACE          reduce using rule 50 (CaseStmt -> CASE INTNUM COLON StmtList BREAK SEMICOLON .)

