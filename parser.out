Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> DeclList FuncList
Rule 2     Program -> DeclList
Rule 3     Program -> FuncList
Rule 4     Program -> <empty>
Rule 5     DeclList -> Declaration
Rule 6     DeclList -> DeclList Declaration
Rule 7     FuncList -> Function
Rule 8     FuncList -> FuncList Function
Rule 9     Declaration -> Type IdentList SEMICOLON
Rule 10    IdentList -> identifier
Rule 11    IdentList -> IdentList COMMA identifier
Rule 12    identifier -> ID
Rule 13    identifier -> ID LBRK INTNUM RBRK
Rule 14    Function -> Type ID LPAREN RPAREN CompoundStmt
Rule 15    Function -> Type ID LPAREN ParamList RPAREN CompoundStmt
Rule 16    ParamList -> Type identifier
Rule 17    ParamList -> ParamList COMMA Type identifier
Rule 18    Type -> INT
Rule 19    Type -> FLOAT
Rule 20    CompoundStmt -> LBRACE DeclList StmtList RBRACE
Rule 21    CompoundStmt -> LBRACE StmtList RBRACE
Rule 22    StmtList -> Stmt StmtList
Rule 23    StmtList -> <empty>
Rule 24    Stmt -> AssignStmt
Rule 25    Stmt -> CallStmt
Rule 26    Stmt -> RetStmt
Rule 27    Stmt -> WhileStmt
Rule 28    Stmt -> ForStmt
Rule 29    Stmt -> IfStmt
Rule 30    Stmt -> SwitchStmt
Rule 31    Stmt -> CompoundStmt
Rule 32    Stmt -> SEMICOLON
Rule 33    AssignStmt -> Assign SEMICOLON
Rule 34    Assign -> ID EQUALS Expr
Rule 35    Assign -> ID LBRK Expr RBRK EQUALS Expr
Rule 36    CallStmt -> Call SEMICOLON
Rule 37    Call -> ID LPAREN ArgList RPAREN
Rule 38    Call -> ID LPAREN RPAREN
Rule 39    RetStmt -> RETURN SEMICOLON
Rule 40    RetStmt -> RETURN Expr SEMICOLON
Rule 41    WhileStmt -> WHILE LPAREN Expr RPAREN Stmt
Rule 42    WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN
Rule 43    ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
Rule 44    IfStmt -> IF LPAREN Expr RPAREN Stmt
Rule 45    IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt
Rule 46    SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
Rule 47    CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
Rule 48    CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
Rule 49    CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
Rule 50    CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList
Rule 51    CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON
Rule 52    CaseList -> CaseList CASE INTNUM COLON StmtList
Rule 53    CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
Rule 54    CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
Rule 55    CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
Rule 56    CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList
Rule 57    CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON
Rule 58    CaseList -> CASE INTNUM COLON StmtList
Rule 59    CaseList -> DEFAULT COLON StmtList BREAK SEMICOLON
Rule 60    CaseList -> DEFAULT COLON StmtList
Rule 61    Expr -> Unop
Rule 62    Expr -> Bioperation
Rule 63    Expr -> Call
Rule 64    Expr -> INTNUM
Rule 65    Expr -> FLOATNUM
Rule 66    Expr -> ID
Rule 67    Expr -> ID LBRK Expr RBRK
Rule 68    Expr -> LPAREN Expr RPAREN
Rule 69    Unop -> MINUS Expr
Rule 70    Bioperation -> Expr PLUS Expr
Rule 71    Bioperation -> Expr MINUS Expr
Rule 72    Bioperation -> Expr TIMES Expr
Rule 73    Bioperation -> Expr DIVIDE Expr
Rule 74    Bioperation -> Expr GT Expr
Rule 75    Bioperation -> Expr LT Expr
Rule 76    Bioperation -> Expr GE Expr
Rule 77    Bioperation -> Expr LE Expr
Rule 78    Bioperation -> Expr EQ Expr
Rule 79    Bioperation -> Expr NE Expr
Rule 80    ArgList -> Expr
Rule 81    ArgList -> ArgList COMMA Expr

Terminals, with rules where they appear

BREAK                : 47 47 48 49 51 53 53 54 55 57 59
CASE                 : 47 48 49 50 51 52 53 54 55 56 57 58
COLON                : 47 47 48 48 49 49 50 50 51 52 53 53 54 54 55 55 56 56 57 58 59 60
COMMA                : 11 17 81
DEFAULT              : 47 48 49 50 53 54 55 56 59 60
DIVIDE               : 73
DO                   : 42
ELSE                 : 45
EQ                   : 78
EQUALS               : 34 35
FLOAT                : 19
FLOATNUM             : 65
FOR                  : 43
GE                   : 76
GT                   : 74
ID                   : 12 13 14 15 34 35 37 38 66 67
IF                   : 44 45
INT                  : 18
INTNUM               : 13 47 48 49 50 51 52 53 54 55 56 57 58 64
LBRACE               : 20 21 46
LBRK                 : 13 35 67
LE                   : 77
LPAREN               : 14 15 37 38 41 42 43 44 45 46 68
LT                   : 75
MINUS                : 69 71
NE                   : 79
PLUS                 : 70
RBRACE               : 20 21 46
RBRK                 : 13 35 67
RETURN               : 39 40
RPAREN               : 14 15 37 38 41 42 43 44 45 46 68
SEMICOLON            : 9 32 33 36 39 40 43 43 47 47 48 49 51 53 53 54 55 57 59
SWITCH               : 46
TIMES                : 72
WHILE                : 41 42
error                : 

Nonterminals, with rules where they appear

ArgList              : 37 81
Assign               : 33 43 43
AssignStmt           : 24
Bioperation          : 62
Call                 : 36 63
CallStmt             : 25
CaseList             : 46 47 48 49 50 51 52
CompoundStmt         : 14 15 31
DeclList             : 1 2 6 20
Declaration          : 5 6
Expr                 : 34 35 35 40 41 42 43 44 45 67 68 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 81
ForStmt              : 28
FuncList             : 1 3 8
Function             : 7 8
IdentList            : 9 11
IfStmt               : 29
ParamList            : 15 17
Program              : 0
RetStmt              : 26
Stmt                 : 22 41 42 43 44 45 45
StmtList             : 20 21 22 47 47 48 48 49 49 50 50 51 52 53 53 54 54 55 55 56 56 57 58 59 60
SwitchStmt           : 30
Type                 : 9 14 15 16 17
Unop                 : 61
WhileStmt            : 27
identifier           : 10 11 16 17 46

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . DeclList FuncList
    (2) Program -> . DeclList
    (3) Program -> . FuncList
    (4) Program -> .
    (5) DeclList -> . Declaration
    (6) DeclList -> . DeclList Declaration
    (7) FuncList -> . Function
    (8) FuncList -> . FuncList Function
    (9) Declaration -> . Type IdentList SEMICOLON
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 4 (Program -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 6

    Declaration                    shift and go to state 1
    FuncList                       shift and go to state 2
    DeclList                       shift and go to state 7
    Function                       shift and go to state 3
    Program                        shift and go to state 5
    Type                           shift and go to state 4

state 1

    (5) DeclList -> Declaration .

    INT             reduce using rule 5 (DeclList -> Declaration .)
    FLOAT           reduce using rule 5 (DeclList -> Declaration .)
    $end            reduce using rule 5 (DeclList -> Declaration .)
    SEMICOLON       reduce using rule 5 (DeclList -> Declaration .)
    RETURN          reduce using rule 5 (DeclList -> Declaration .)
    WHILE           reduce using rule 5 (DeclList -> Declaration .)
    DO              reduce using rule 5 (DeclList -> Declaration .)
    FOR             reduce using rule 5 (DeclList -> Declaration .)
    IF              reduce using rule 5 (DeclList -> Declaration .)
    SWITCH          reduce using rule 5 (DeclList -> Declaration .)
    LBRACE          reduce using rule 5 (DeclList -> Declaration .)
    ID              reduce using rule 5 (DeclList -> Declaration .)
    RBRACE          reduce using rule 5 (DeclList -> Declaration .)


state 2

    (3) Program -> FuncList .
    (8) FuncList -> FuncList . Function
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 3 (Program -> FuncList .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 6

    Function                       shift and go to state 9
    Type                           shift and go to state 10

state 3

    (7) FuncList -> Function .

    INT             reduce using rule 7 (FuncList -> Function .)
    FLOAT           reduce using rule 7 (FuncList -> Function .)
    $end            reduce using rule 7 (FuncList -> Function .)


state 4

    (9) Declaration -> Type . IdentList SEMICOLON
    (14) Function -> Type . ID LPAREN RPAREN CompoundStmt
    (15) Function -> Type . ID LPAREN ParamList RPAREN CompoundStmt
    (10) IdentList -> . identifier
    (11) IdentList -> . IdentList COMMA identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 12

    identifier                     shift and go to state 13
    IdentList                      shift and go to state 11

state 5

    (0) S' -> Program .



state 6

    (19) Type -> FLOAT .

    ID              reduce using rule 19 (Type -> FLOAT .)


state 7

    (1) Program -> DeclList . FuncList
    (2) Program -> DeclList .
    (6) DeclList -> DeclList . Declaration
    (7) FuncList -> . Function
    (8) FuncList -> . FuncList Function
    (9) Declaration -> . Type IdentList SEMICOLON
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 2 (Program -> DeclList .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 6

    Declaration                    shift and go to state 14
    FuncList                       shift and go to state 15
    Function                       shift and go to state 3
    Type                           shift and go to state 4

state 8

    (18) Type -> INT .

    ID              reduce using rule 18 (Type -> INT .)


state 9

    (8) FuncList -> FuncList Function .

    INT             reduce using rule 8 (FuncList -> FuncList Function .)
    FLOAT           reduce using rule 8 (FuncList -> FuncList Function .)
    $end            reduce using rule 8 (FuncList -> FuncList Function .)


state 10

    (14) Function -> Type . ID LPAREN RPAREN CompoundStmt
    (15) Function -> Type . ID LPAREN ParamList RPAREN CompoundStmt

    ID              shift and go to state 16


state 11

    (9) Declaration -> Type IdentList . SEMICOLON
    (11) IdentList -> IdentList . COMMA identifier

    SEMICOLON       shift and go to state 18
    COMMA           shift and go to state 17


state 12

    (14) Function -> Type ID . LPAREN RPAREN CompoundStmt
    (15) Function -> Type ID . LPAREN ParamList RPAREN CompoundStmt
    (12) identifier -> ID .
    (13) identifier -> ID . LBRK INTNUM RBRK

    LPAREN          shift and go to state 19
    SEMICOLON       reduce using rule 12 (identifier -> ID .)
    COMMA           reduce using rule 12 (identifier -> ID .)
    LBRK            shift and go to state 20


state 13

    (10) IdentList -> identifier .

    SEMICOLON       reduce using rule 10 (IdentList -> identifier .)
    COMMA           reduce using rule 10 (IdentList -> identifier .)


state 14

    (6) DeclList -> DeclList Declaration .

    INT             reduce using rule 6 (DeclList -> DeclList Declaration .)
    FLOAT           reduce using rule 6 (DeclList -> DeclList Declaration .)
    $end            reduce using rule 6 (DeclList -> DeclList Declaration .)
    SEMICOLON       reduce using rule 6 (DeclList -> DeclList Declaration .)
    RETURN          reduce using rule 6 (DeclList -> DeclList Declaration .)
    WHILE           reduce using rule 6 (DeclList -> DeclList Declaration .)
    DO              reduce using rule 6 (DeclList -> DeclList Declaration .)
    FOR             reduce using rule 6 (DeclList -> DeclList Declaration .)
    IF              reduce using rule 6 (DeclList -> DeclList Declaration .)
    SWITCH          reduce using rule 6 (DeclList -> DeclList Declaration .)
    LBRACE          reduce using rule 6 (DeclList -> DeclList Declaration .)
    ID              reduce using rule 6 (DeclList -> DeclList Declaration .)
    RBRACE          reduce using rule 6 (DeclList -> DeclList Declaration .)


state 15

    (1) Program -> DeclList FuncList .
    (8) FuncList -> FuncList . Function
    (14) Function -> . Type ID LPAREN RPAREN CompoundStmt
    (15) Function -> . Type ID LPAREN ParamList RPAREN CompoundStmt
    (18) Type -> . INT
    (19) Type -> . FLOAT

    $end            reduce using rule 1 (Program -> DeclList FuncList .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 6

    Function                       shift and go to state 9
    Type                           shift and go to state 10

state 16

    (14) Function -> Type ID . LPAREN RPAREN CompoundStmt
    (15) Function -> Type ID . LPAREN ParamList RPAREN CompoundStmt

    LPAREN          shift and go to state 19


state 17

    (11) IdentList -> IdentList COMMA . identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 21

    identifier                     shift and go to state 22

state 18

    (9) Declaration -> Type IdentList SEMICOLON .

    INT             reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    FLOAT           reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    $end            reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    SEMICOLON       reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    RETURN          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    WHILE           reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    DO              reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    FOR             reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    IF              reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    SWITCH          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    LBRACE          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    ID              reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)
    RBRACE          reduce using rule 9 (Declaration -> Type IdentList SEMICOLON .)


state 19

    (14) Function -> Type ID LPAREN . RPAREN CompoundStmt
    (15) Function -> Type ID LPAREN . ParamList RPAREN CompoundStmt
    (16) ParamList -> . Type identifier
    (17) ParamList -> . ParamList COMMA Type identifier
    (18) Type -> . INT
    (19) Type -> . FLOAT

    RPAREN          shift and go to state 24
    INT             shift and go to state 8
    FLOAT           shift and go to state 6

    ParamList                      shift and go to state 23
    Type                           shift and go to state 25

state 20

    (13) identifier -> ID LBRK . INTNUM RBRK

    INTNUM          shift and go to state 26


state 21

    (12) identifier -> ID .
    (13) identifier -> ID . LBRK INTNUM RBRK

    RPAREN          reduce using rule 12 (identifier -> ID .)
    SEMICOLON       reduce using rule 12 (identifier -> ID .)
    COMMA           reduce using rule 12 (identifier -> ID .)
    LBRK            shift and go to state 20


state 22

    (11) IdentList -> IdentList COMMA identifier .

    SEMICOLON       reduce using rule 11 (IdentList -> IdentList COMMA identifier .)
    COMMA           reduce using rule 11 (IdentList -> IdentList COMMA identifier .)


state 23

    (15) Function -> Type ID LPAREN ParamList . RPAREN CompoundStmt
    (17) ParamList -> ParamList . COMMA Type identifier

    RPAREN          shift and go to state 27
    COMMA           shift and go to state 28


state 24

    (14) Function -> Type ID LPAREN RPAREN . CompoundStmt
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 29

    CompoundStmt                   shift and go to state 30

state 25

    (16) ParamList -> Type . identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 21

    identifier                     shift and go to state 31

state 26

    (13) identifier -> ID LBRK INTNUM . RBRK

    RBRK            shift and go to state 32


state 27

    (15) Function -> Type ID LPAREN ParamList RPAREN . CompoundStmt
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 29

    CompoundStmt                   shift and go to state 33

state 28

    (17) ParamList -> ParamList COMMA . Type identifier
    (18) Type -> . INT
    (19) Type -> . FLOAT

    INT             shift and go to state 8
    FLOAT           shift and go to state 6

    Type                           shift and go to state 34

state 29

    (20) CompoundStmt -> LBRACE . DeclList StmtList RBRACE
    (21) CompoundStmt -> LBRACE . StmtList RBRACE
    (5) DeclList -> . Declaration
    (6) DeclList -> . DeclList Declaration
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (9) Declaration -> . Type IdentList SEMICOLON
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (18) Type -> . INT
    (19) Type -> . FLOAT
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RBRACE          reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    INT             shift and go to state 8
    FLOAT           shift and go to state 6
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Declaration                    shift and go to state 1
    CallStmt                       shift and go to state 35
    Stmt                           shift and go to state 37
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 46
    Assign                         shift and go to state 45
    WhileStmt                      shift and go to state 47
    IfStmt                         shift and go to state 41
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Call                           shift and go to state 52
    Type                           shift and go to state 53
    CompoundStmt                   shift and go to state 40
    DeclList                       shift and go to state 54
    AssignStmt                     shift and go to state 36

state 30

    (14) Function -> Type ID LPAREN RPAREN CompoundStmt .

    INT             reduce using rule 14 (Function -> Type ID LPAREN RPAREN CompoundStmt .)
    FLOAT           reduce using rule 14 (Function -> Type ID LPAREN RPAREN CompoundStmt .)
    $end            reduce using rule 14 (Function -> Type ID LPAREN RPAREN CompoundStmt .)


state 31

    (16) ParamList -> Type identifier .

    RPAREN          reduce using rule 16 (ParamList -> Type identifier .)
    COMMA           reduce using rule 16 (ParamList -> Type identifier .)


state 32

    (13) identifier -> ID LBRK INTNUM RBRK .

    SEMICOLON       reduce using rule 13 (identifier -> ID LBRK INTNUM RBRK .)
    COMMA           reduce using rule 13 (identifier -> ID LBRK INTNUM RBRK .)
    RPAREN          reduce using rule 13 (identifier -> ID LBRK INTNUM RBRK .)


state 33

    (15) Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .

    INT             reduce using rule 15 (Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .)
    FLOAT           reduce using rule 15 (Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .)
    $end            reduce using rule 15 (Function -> Type ID LPAREN ParamList RPAREN CompoundStmt .)


state 34

    (17) ParamList -> ParamList COMMA Type . identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 21

    identifier                     shift and go to state 57

state 35

    (25) Stmt -> CallStmt .

    SEMICOLON       reduce using rule 25 (Stmt -> CallStmt .)
    RETURN          reduce using rule 25 (Stmt -> CallStmt .)
    WHILE           reduce using rule 25 (Stmt -> CallStmt .)
    DO              reduce using rule 25 (Stmt -> CallStmt .)
    FOR             reduce using rule 25 (Stmt -> CallStmt .)
    IF              reduce using rule 25 (Stmt -> CallStmt .)
    SWITCH          reduce using rule 25 (Stmt -> CallStmt .)
    LBRACE          reduce using rule 25 (Stmt -> CallStmt .)
    ID              reduce using rule 25 (Stmt -> CallStmt .)
    BREAK           reduce using rule 25 (Stmt -> CallStmt .)
    RBRACE          reduce using rule 25 (Stmt -> CallStmt .)
    CASE            reduce using rule 25 (Stmt -> CallStmt .)
    DEFAULT         reduce using rule 25 (Stmt -> CallStmt .)
    ELSE            reduce using rule 25 (Stmt -> CallStmt .)


state 36

    (24) Stmt -> AssignStmt .

    SEMICOLON       reduce using rule 24 (Stmt -> AssignStmt .)
    RETURN          reduce using rule 24 (Stmt -> AssignStmt .)
    WHILE           reduce using rule 24 (Stmt -> AssignStmt .)
    DO              reduce using rule 24 (Stmt -> AssignStmt .)
    FOR             reduce using rule 24 (Stmt -> AssignStmt .)
    IF              reduce using rule 24 (Stmt -> AssignStmt .)
    SWITCH          reduce using rule 24 (Stmt -> AssignStmt .)
    LBRACE          reduce using rule 24 (Stmt -> AssignStmt .)
    ID              reduce using rule 24 (Stmt -> AssignStmt .)
    BREAK           reduce using rule 24 (Stmt -> AssignStmt .)
    RBRACE          reduce using rule 24 (Stmt -> AssignStmt .)
    CASE            reduce using rule 24 (Stmt -> AssignStmt .)
    DEFAULT         reduce using rule 24 (Stmt -> AssignStmt .)
    ELSE            reduce using rule 24 (Stmt -> AssignStmt .)


state 37

    (22) StmtList -> Stmt . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RBRACE          reduce using rule 23 (StmtList -> .)
    BREAK           reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    DEFAULT         reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 58
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 37
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 38

    (39) RetStmt -> RETURN . SEMICOLON
    (40) RetStmt -> RETURN . Expr SEMICOLON
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 68
    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 60
    Call                           shift and go to state 67

state 39

    (44) IfStmt -> IF . LPAREN Expr RPAREN Stmt
    (45) IfStmt -> IF . LPAREN Expr RPAREN Stmt ELSE Stmt

    LPAREN          shift and go to state 69


state 40

    (31) Stmt -> CompoundStmt .

    SEMICOLON       reduce using rule 31 (Stmt -> CompoundStmt .)
    RETURN          reduce using rule 31 (Stmt -> CompoundStmt .)
    WHILE           reduce using rule 31 (Stmt -> CompoundStmt .)
    DO              reduce using rule 31 (Stmt -> CompoundStmt .)
    FOR             reduce using rule 31 (Stmt -> CompoundStmt .)
    IF              reduce using rule 31 (Stmt -> CompoundStmt .)
    SWITCH          reduce using rule 31 (Stmt -> CompoundStmt .)
    LBRACE          reduce using rule 31 (Stmt -> CompoundStmt .)
    ID              reduce using rule 31 (Stmt -> CompoundStmt .)
    BREAK           reduce using rule 31 (Stmt -> CompoundStmt .)
    RBRACE          reduce using rule 31 (Stmt -> CompoundStmt .)
    CASE            reduce using rule 31 (Stmt -> CompoundStmt .)
    DEFAULT         reduce using rule 31 (Stmt -> CompoundStmt .)
    ELSE            reduce using rule 31 (Stmt -> CompoundStmt .)


state 41

    (29) Stmt -> IfStmt .

    SEMICOLON       reduce using rule 29 (Stmt -> IfStmt .)
    RETURN          reduce using rule 29 (Stmt -> IfStmt .)
    WHILE           reduce using rule 29 (Stmt -> IfStmt .)
    DO              reduce using rule 29 (Stmt -> IfStmt .)
    FOR             reduce using rule 29 (Stmt -> IfStmt .)
    IF              reduce using rule 29 (Stmt -> IfStmt .)
    SWITCH          reduce using rule 29 (Stmt -> IfStmt .)
    LBRACE          reduce using rule 29 (Stmt -> IfStmt .)
    ID              reduce using rule 29 (Stmt -> IfStmt .)
    BREAK           reduce using rule 29 (Stmt -> IfStmt .)
    RBRACE          reduce using rule 29 (Stmt -> IfStmt .)
    CASE            reduce using rule 29 (Stmt -> IfStmt .)
    DEFAULT         reduce using rule 29 (Stmt -> IfStmt .)
    ELSE            reduce using rule 29 (Stmt -> IfStmt .)


state 42

    (34) Assign -> ID . EQUALS Expr
    (35) Assign -> ID . LBRK Expr RBRK EQUALS Expr
    (37) Call -> ID . LPAREN ArgList RPAREN
    (38) Call -> ID . LPAREN RPAREN

    EQUALS          shift and go to state 70
    LBRK            shift and go to state 72
    LPAREN          shift and go to state 71


state 43

    (28) Stmt -> ForStmt .

    SEMICOLON       reduce using rule 28 (Stmt -> ForStmt .)
    RETURN          reduce using rule 28 (Stmt -> ForStmt .)
    WHILE           reduce using rule 28 (Stmt -> ForStmt .)
    DO              reduce using rule 28 (Stmt -> ForStmt .)
    FOR             reduce using rule 28 (Stmt -> ForStmt .)
    IF              reduce using rule 28 (Stmt -> ForStmt .)
    SWITCH          reduce using rule 28 (Stmt -> ForStmt .)
    LBRACE          reduce using rule 28 (Stmt -> ForStmt .)
    ID              reduce using rule 28 (Stmt -> ForStmt .)
    BREAK           reduce using rule 28 (Stmt -> ForStmt .)
    RBRACE          reduce using rule 28 (Stmt -> ForStmt .)
    CASE            reduce using rule 28 (Stmt -> ForStmt .)
    DEFAULT         reduce using rule 28 (Stmt -> ForStmt .)
    ELSE            reduce using rule 28 (Stmt -> ForStmt .)


state 44

    (42) WhileStmt -> DO . Stmt WHILE LPAREN Expr RPAREN
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    WhileStmt                      shift and go to state 47
    IfStmt                         shift and go to state 41
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 73
    CompoundStmt                   shift and go to state 40
    AssignStmt                     shift and go to state 36

state 45

    (33) AssignStmt -> Assign . SEMICOLON

    SEMICOLON       shift and go to state 74


state 46

    (21) CompoundStmt -> LBRACE StmtList . RBRACE

    RBRACE          shift and go to state 75


state 47

    (27) Stmt -> WhileStmt .

    SEMICOLON       reduce using rule 27 (Stmt -> WhileStmt .)
    RETURN          reduce using rule 27 (Stmt -> WhileStmt .)
    WHILE           reduce using rule 27 (Stmt -> WhileStmt .)
    DO              reduce using rule 27 (Stmt -> WhileStmt .)
    FOR             reduce using rule 27 (Stmt -> WhileStmt .)
    IF              reduce using rule 27 (Stmt -> WhileStmt .)
    SWITCH          reduce using rule 27 (Stmt -> WhileStmt .)
    LBRACE          reduce using rule 27 (Stmt -> WhileStmt .)
    ID              reduce using rule 27 (Stmt -> WhileStmt .)
    BREAK           reduce using rule 27 (Stmt -> WhileStmt .)
    RBRACE          reduce using rule 27 (Stmt -> WhileStmt .)
    CASE            reduce using rule 27 (Stmt -> WhileStmt .)
    DEFAULT         reduce using rule 27 (Stmt -> WhileStmt .)
    ELSE            reduce using rule 27 (Stmt -> WhileStmt .)


state 48

    (43) ForStmt -> FOR . LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt

    LPAREN          shift and go to state 76


state 49

    (30) Stmt -> SwitchStmt .

    SEMICOLON       reduce using rule 30 (Stmt -> SwitchStmt .)
    RETURN          reduce using rule 30 (Stmt -> SwitchStmt .)
    WHILE           reduce using rule 30 (Stmt -> SwitchStmt .)
    DO              reduce using rule 30 (Stmt -> SwitchStmt .)
    FOR             reduce using rule 30 (Stmt -> SwitchStmt .)
    IF              reduce using rule 30 (Stmt -> SwitchStmt .)
    SWITCH          reduce using rule 30 (Stmt -> SwitchStmt .)
    LBRACE          reduce using rule 30 (Stmt -> SwitchStmt .)
    ID              reduce using rule 30 (Stmt -> SwitchStmt .)
    BREAK           reduce using rule 30 (Stmt -> SwitchStmt .)
    RBRACE          reduce using rule 30 (Stmt -> SwitchStmt .)
    CASE            reduce using rule 30 (Stmt -> SwitchStmt .)
    DEFAULT         reduce using rule 30 (Stmt -> SwitchStmt .)
    ELSE            reduce using rule 30 (Stmt -> SwitchStmt .)


state 50

    (26) Stmt -> RetStmt .

    SEMICOLON       reduce using rule 26 (Stmt -> RetStmt .)
    RETURN          reduce using rule 26 (Stmt -> RetStmt .)
    WHILE           reduce using rule 26 (Stmt -> RetStmt .)
    DO              reduce using rule 26 (Stmt -> RetStmt .)
    FOR             reduce using rule 26 (Stmt -> RetStmt .)
    IF              reduce using rule 26 (Stmt -> RetStmt .)
    SWITCH          reduce using rule 26 (Stmt -> RetStmt .)
    LBRACE          reduce using rule 26 (Stmt -> RetStmt .)
    ID              reduce using rule 26 (Stmt -> RetStmt .)
    BREAK           reduce using rule 26 (Stmt -> RetStmt .)
    RBRACE          reduce using rule 26 (Stmt -> RetStmt .)
    CASE            reduce using rule 26 (Stmt -> RetStmt .)
    DEFAULT         reduce using rule 26 (Stmt -> RetStmt .)
    ELSE            reduce using rule 26 (Stmt -> RetStmt .)


state 51

    (46) SwitchStmt -> SWITCH . LPAREN identifier RPAREN LBRACE CaseList RBRACE

    LPAREN          shift and go to state 77


state 52

    (36) CallStmt -> Call . SEMICOLON

    SEMICOLON       shift and go to state 78


state 53

    (9) Declaration -> Type . IdentList SEMICOLON
    (10) IdentList -> . identifier
    (11) IdentList -> . IdentList COMMA identifier
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 21

    identifier                     shift and go to state 13
    IdentList                      shift and go to state 11

state 54

    (20) CompoundStmt -> LBRACE DeclList . StmtList RBRACE
    (6) DeclList -> DeclList . Declaration
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (9) Declaration -> . Type IdentList SEMICOLON
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (18) Type -> . INT
    (19) Type -> . FLOAT
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RBRACE          reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    INT             shift and go to state 8
    FLOAT           shift and go to state 6
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Declaration                    shift and go to state 14
    CallStmt                       shift and go to state 35
    Stmt                           shift and go to state 37
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 79
    Assign                         shift and go to state 45
    WhileStmt                      shift and go to state 47
    IfStmt                         shift and go to state 41
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Call                           shift and go to state 52
    Type                           shift and go to state 53
    CompoundStmt                   shift and go to state 40
    AssignStmt                     shift and go to state 36

state 55

    (41) WhileStmt -> WHILE . LPAREN Expr RPAREN Stmt

    LPAREN          shift and go to state 80


state 56

    (32) Stmt -> SEMICOLON .

    SEMICOLON       reduce using rule 32 (Stmt -> SEMICOLON .)
    RETURN          reduce using rule 32 (Stmt -> SEMICOLON .)
    WHILE           reduce using rule 32 (Stmt -> SEMICOLON .)
    DO              reduce using rule 32 (Stmt -> SEMICOLON .)
    FOR             reduce using rule 32 (Stmt -> SEMICOLON .)
    IF              reduce using rule 32 (Stmt -> SEMICOLON .)
    SWITCH          reduce using rule 32 (Stmt -> SEMICOLON .)
    LBRACE          reduce using rule 32 (Stmt -> SEMICOLON .)
    ID              reduce using rule 32 (Stmt -> SEMICOLON .)
    BREAK           reduce using rule 32 (Stmt -> SEMICOLON .)
    RBRACE          reduce using rule 32 (Stmt -> SEMICOLON .)
    CASE            reduce using rule 32 (Stmt -> SEMICOLON .)
    DEFAULT         reduce using rule 32 (Stmt -> SEMICOLON .)
    ELSE            reduce using rule 32 (Stmt -> SEMICOLON .)


state 57

    (17) ParamList -> ParamList COMMA Type identifier .

    RPAREN          reduce using rule 17 (ParamList -> ParamList COMMA Type identifier .)
    COMMA           reduce using rule 17 (ParamList -> ParamList COMMA Type identifier .)


state 58

    (22) StmtList -> Stmt StmtList .

    RBRACE          reduce using rule 22 (StmtList -> Stmt StmtList .)
    BREAK           reduce using rule 22 (StmtList -> Stmt StmtList .)
    DEFAULT         reduce using rule 22 (StmtList -> Stmt StmtList .)
    CASE            reduce using rule 22 (StmtList -> Stmt StmtList .)


state 59

    (65) Expr -> FLOATNUM .

    PLUS            reduce using rule 65 (Expr -> FLOATNUM .)
    MINUS           reduce using rule 65 (Expr -> FLOATNUM .)
    TIMES           reduce using rule 65 (Expr -> FLOATNUM .)
    DIVIDE          reduce using rule 65 (Expr -> FLOATNUM .)
    GT              reduce using rule 65 (Expr -> FLOATNUM .)
    LT              reduce using rule 65 (Expr -> FLOATNUM .)
    GE              reduce using rule 65 (Expr -> FLOATNUM .)
    LE              reduce using rule 65 (Expr -> FLOATNUM .)
    EQ              reduce using rule 65 (Expr -> FLOATNUM .)
    NE              reduce using rule 65 (Expr -> FLOATNUM .)
    SEMICOLON       reduce using rule 65 (Expr -> FLOATNUM .)
    RPAREN          reduce using rule 65 (Expr -> FLOATNUM .)
    COMMA           reduce using rule 65 (Expr -> FLOATNUM .)
    RBRK            reduce using rule 65 (Expr -> FLOATNUM .)


state 60

    (40) RetStmt -> RETURN Expr . SEMICOLON
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    SEMICOLON       shift and go to state 90
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 61

    (62) Expr -> Bioperation .

    PLUS            reduce using rule 62 (Expr -> Bioperation .)
    MINUS           reduce using rule 62 (Expr -> Bioperation .)
    TIMES           reduce using rule 62 (Expr -> Bioperation .)
    DIVIDE          reduce using rule 62 (Expr -> Bioperation .)
    GT              reduce using rule 62 (Expr -> Bioperation .)
    LT              reduce using rule 62 (Expr -> Bioperation .)
    GE              reduce using rule 62 (Expr -> Bioperation .)
    LE              reduce using rule 62 (Expr -> Bioperation .)
    EQ              reduce using rule 62 (Expr -> Bioperation .)
    NE              reduce using rule 62 (Expr -> Bioperation .)
    SEMICOLON       reduce using rule 62 (Expr -> Bioperation .)
    RPAREN          reduce using rule 62 (Expr -> Bioperation .)
    COMMA           reduce using rule 62 (Expr -> Bioperation .)
    RBRK            reduce using rule 62 (Expr -> Bioperation .)


state 62

    (61) Expr -> Unop .

    PLUS            reduce using rule 61 (Expr -> Unop .)
    MINUS           reduce using rule 61 (Expr -> Unop .)
    TIMES           reduce using rule 61 (Expr -> Unop .)
    DIVIDE          reduce using rule 61 (Expr -> Unop .)
    GT              reduce using rule 61 (Expr -> Unop .)
    LT              reduce using rule 61 (Expr -> Unop .)
    GE              reduce using rule 61 (Expr -> Unop .)
    LE              reduce using rule 61 (Expr -> Unop .)
    EQ              reduce using rule 61 (Expr -> Unop .)
    NE              reduce using rule 61 (Expr -> Unop .)
    SEMICOLON       reduce using rule 61 (Expr -> Unop .)
    RPAREN          reduce using rule 61 (Expr -> Unop .)
    COMMA           reduce using rule 61 (Expr -> Unop .)
    RBRK            reduce using rule 61 (Expr -> Unop .)


state 63

    (68) Expr -> LPAREN . Expr RPAREN
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 92
    Call                           shift and go to state 67

state 64

    (66) Expr -> ID .
    (67) Expr -> ID . LBRK Expr RBRK
    (37) Call -> ID . LPAREN ArgList RPAREN
    (38) Call -> ID . LPAREN RPAREN

    PLUS            reduce using rule 66 (Expr -> ID .)
    MINUS           reduce using rule 66 (Expr -> ID .)
    TIMES           reduce using rule 66 (Expr -> ID .)
    DIVIDE          reduce using rule 66 (Expr -> ID .)
    GT              reduce using rule 66 (Expr -> ID .)
    LT              reduce using rule 66 (Expr -> ID .)
    GE              reduce using rule 66 (Expr -> ID .)
    LE              reduce using rule 66 (Expr -> ID .)
    EQ              reduce using rule 66 (Expr -> ID .)
    NE              reduce using rule 66 (Expr -> ID .)
    SEMICOLON       reduce using rule 66 (Expr -> ID .)
    RPAREN          reduce using rule 66 (Expr -> ID .)
    COMMA           reduce using rule 66 (Expr -> ID .)
    RBRK            reduce using rule 66 (Expr -> ID .)
    LBRK            shift and go to state 93
    LPAREN          shift and go to state 71


state 65

    (69) Unop -> MINUS . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 94
    Call                           shift and go to state 67

state 66

    (64) Expr -> INTNUM .

    PLUS            reduce using rule 64 (Expr -> INTNUM .)
    MINUS           reduce using rule 64 (Expr -> INTNUM .)
    TIMES           reduce using rule 64 (Expr -> INTNUM .)
    DIVIDE          reduce using rule 64 (Expr -> INTNUM .)
    GT              reduce using rule 64 (Expr -> INTNUM .)
    LT              reduce using rule 64 (Expr -> INTNUM .)
    GE              reduce using rule 64 (Expr -> INTNUM .)
    LE              reduce using rule 64 (Expr -> INTNUM .)
    EQ              reduce using rule 64 (Expr -> INTNUM .)
    NE              reduce using rule 64 (Expr -> INTNUM .)
    SEMICOLON       reduce using rule 64 (Expr -> INTNUM .)
    RPAREN          reduce using rule 64 (Expr -> INTNUM .)
    COMMA           reduce using rule 64 (Expr -> INTNUM .)
    RBRK            reduce using rule 64 (Expr -> INTNUM .)


state 67

    (63) Expr -> Call .

    PLUS            reduce using rule 63 (Expr -> Call .)
    MINUS           reduce using rule 63 (Expr -> Call .)
    TIMES           reduce using rule 63 (Expr -> Call .)
    DIVIDE          reduce using rule 63 (Expr -> Call .)
    GT              reduce using rule 63 (Expr -> Call .)
    LT              reduce using rule 63 (Expr -> Call .)
    GE              reduce using rule 63 (Expr -> Call .)
    LE              reduce using rule 63 (Expr -> Call .)
    EQ              reduce using rule 63 (Expr -> Call .)
    NE              reduce using rule 63 (Expr -> Call .)
    SEMICOLON       reduce using rule 63 (Expr -> Call .)
    RPAREN          reduce using rule 63 (Expr -> Call .)
    COMMA           reduce using rule 63 (Expr -> Call .)
    RBRK            reduce using rule 63 (Expr -> Call .)


state 68

    (39) RetStmt -> RETURN SEMICOLON .

    ELSE            reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    RETURN          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    WHILE           reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    DO              reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    FOR             reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    IF              reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    ID              reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    BREAK           reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    CASE            reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 39 (RetStmt -> RETURN SEMICOLON .)


state 69

    (44) IfStmt -> IF LPAREN . Expr RPAREN Stmt
    (45) IfStmt -> IF LPAREN . Expr RPAREN Stmt ELSE Stmt
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 95
    Call                           shift and go to state 67

state 70

    (34) Assign -> ID EQUALS . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 96
    Call                           shift and go to state 67

state 71

    (37) Call -> ID LPAREN . ArgList RPAREN
    (38) Call -> ID LPAREN . RPAREN
    (80) ArgList -> . Expr
    (81) ArgList -> . ArgList COMMA Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 98
    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Expr                           shift and go to state 99
    Unop                           shift and go to state 62
    Call                           shift and go to state 67
    ArgList                        shift and go to state 97
    Bioperation                    shift and go to state 61

state 72

    (35) Assign -> ID LBRK . Expr RBRK EQUALS Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 100
    Call                           shift and go to state 67

state 73

    (42) WhileStmt -> DO Stmt . WHILE LPAREN Expr RPAREN

    WHILE           shift and go to state 101


state 74

    (33) AssignStmt -> Assign SEMICOLON .

    ELSE            reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    SEMICOLON       reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    RETURN          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    WHILE           reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    DO              reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    FOR             reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    IF              reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    SWITCH          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    LBRACE          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    ID              reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    RBRACE          reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    BREAK           reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    CASE            reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)
    DEFAULT         reduce using rule 33 (AssignStmt -> Assign SEMICOLON .)


state 75

    (21) CompoundStmt -> LBRACE StmtList RBRACE .

    ELSE            reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    SEMICOLON       reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    RETURN          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    WHILE           reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    DO              reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    FOR             reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    IF              reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    SWITCH          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    LBRACE          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    ID              reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    BREAK           reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    CASE            reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    INT             reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    FLOAT           reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)
    $end            reduce using rule 21 (CompoundStmt -> LBRACE StmtList RBRACE .)


state 76

    (43) ForStmt -> FOR LPAREN . Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr

    ID              shift and go to state 102

    Assign                         shift and go to state 103

state 77

    (46) SwitchStmt -> SWITCH LPAREN . identifier RPAREN LBRACE CaseList RBRACE
    (12) identifier -> . ID
    (13) identifier -> . ID LBRK INTNUM RBRK

    ID              shift and go to state 21

    identifier                     shift and go to state 104

state 78

    (36) CallStmt -> Call SEMICOLON .

    SEMICOLON       reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    RETURN          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    WHILE           reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    DO              reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    FOR             reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    IF              reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    SWITCH          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    LBRACE          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    ID              reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    BREAK           reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    RBRACE          reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    CASE            reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    DEFAULT         reduce using rule 36 (CallStmt -> Call SEMICOLON .)
    ELSE            reduce using rule 36 (CallStmt -> Call SEMICOLON .)


state 79

    (20) CompoundStmt -> LBRACE DeclList StmtList . RBRACE

    RBRACE          shift and go to state 105


state 80

    (41) WhileStmt -> WHILE LPAREN . Expr RPAREN Stmt
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 106
    Call                           shift and go to state 67

state 81

    (71) Bioperation -> Expr MINUS . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 107
    Call                           shift and go to state 67

state 82

    (74) Bioperation -> Expr GT . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 108
    Call                           shift and go to state 67

state 83

    (79) Bioperation -> Expr NE . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 109
    Call                           shift and go to state 67

state 84

    (70) Bioperation -> Expr PLUS . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 110
    Call                           shift and go to state 67

state 85

    (73) Bioperation -> Expr DIVIDE . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 111
    Call                           shift and go to state 67

state 86

    (75) Bioperation -> Expr LT . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 112
    Call                           shift and go to state 67

state 87

    (77) Bioperation -> Expr LE . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 113
    Call                           shift and go to state 67

state 88

    (78) Bioperation -> Expr EQ . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 114
    Call                           shift and go to state 67

state 89

    (76) Bioperation -> Expr GE . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 115
    Call                           shift and go to state 67

state 90

    (40) RetStmt -> RETURN Expr SEMICOLON .

    ELSE            reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    SEMICOLON       reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    RETURN          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    WHILE           reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    DO              reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    FOR             reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    IF              reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    SWITCH          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    LBRACE          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    ID              reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    RBRACE          reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    BREAK           reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    CASE            reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)
    DEFAULT         reduce using rule 40 (RetStmt -> RETURN Expr SEMICOLON .)


state 91

    (72) Bioperation -> Expr TIMES . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 116
    Call                           shift and go to state 67

state 92

    (68) Expr -> LPAREN Expr . RPAREN
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 93

    (67) Expr -> ID LBRK . Expr RBRK
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 118
    Call                           shift and go to state 67

state 94

    (69) Unop -> MINUS Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    PLUS            reduce using rule 69 (Unop -> MINUS Expr .)
    MINUS           reduce using rule 69 (Unop -> MINUS Expr .)
    TIMES           reduce using rule 69 (Unop -> MINUS Expr .)
    DIVIDE          reduce using rule 69 (Unop -> MINUS Expr .)
    GT              reduce using rule 69 (Unop -> MINUS Expr .)
    LT              reduce using rule 69 (Unop -> MINUS Expr .)
    GE              reduce using rule 69 (Unop -> MINUS Expr .)
    LE              reduce using rule 69 (Unop -> MINUS Expr .)
    EQ              reduce using rule 69 (Unop -> MINUS Expr .)
    NE              reduce using rule 69 (Unop -> MINUS Expr .)
    SEMICOLON       reduce using rule 69 (Unop -> MINUS Expr .)
    RPAREN          reduce using rule 69 (Unop -> MINUS Expr .)
    COMMA           reduce using rule 69 (Unop -> MINUS Expr .)
    RBRK            reduce using rule 69 (Unop -> MINUS Expr .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 91 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 95

    (44) IfStmt -> IF LPAREN Expr . RPAREN Stmt
    (45) IfStmt -> IF LPAREN Expr . RPAREN Stmt ELSE Stmt
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 119
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 96

    (34) Assign -> ID EQUALS Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    SEMICOLON       reduce using rule 34 (Assign -> ID EQUALS Expr .)
    RPAREN          reduce using rule 34 (Assign -> ID EQUALS Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 97

    (37) Call -> ID LPAREN ArgList . RPAREN
    (81) ArgList -> ArgList . COMMA Expr

    RPAREN          shift and go to state 120
    COMMA           shift and go to state 121


state 98

    (38) Call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    GT              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    LT              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    GE              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    LE              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    NE              reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 38 (Call -> ID LPAREN RPAREN .)
    RBRK            reduce using rule 38 (Call -> ID LPAREN RPAREN .)


state 99

    (80) ArgList -> Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 80 (ArgList -> Expr .)
    COMMA           reduce using rule 80 (ArgList -> Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 100

    (35) Assign -> ID LBRK Expr . RBRK EQUALS Expr
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RBRK            shift and go to state 122
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 101

    (42) WhileStmt -> DO Stmt WHILE . LPAREN Expr RPAREN

    LPAREN          shift and go to state 123


state 102

    (34) Assign -> ID . EQUALS Expr
    (35) Assign -> ID . LBRK Expr RBRK EQUALS Expr

    EQUALS          shift and go to state 70
    LBRK            shift and go to state 72


state 103

    (43) ForStmt -> FOR LPAREN Assign . SEMICOLON Expr SEMICOLON Assign RPAREN Stmt

    SEMICOLON       shift and go to state 124


state 104

    (46) SwitchStmt -> SWITCH LPAREN identifier . RPAREN LBRACE CaseList RBRACE

    RPAREN          shift and go to state 125


state 105

    (20) CompoundStmt -> LBRACE DeclList StmtList RBRACE .

    ELSE            reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    SEMICOLON       reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    RETURN          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    WHILE           reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    DO              reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    FOR             reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    IF              reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    SWITCH          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    LBRACE          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    ID              reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    RBRACE          reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    BREAK           reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    CASE            reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    DEFAULT         reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    INT             reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    FLOAT           reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)
    $end            reduce using rule 20 (CompoundStmt -> LBRACE DeclList StmtList RBRACE .)


state 106

    (41) WhileStmt -> WHILE LPAREN Expr . RPAREN Stmt
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 126
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 107

    (71) Bioperation -> Expr MINUS Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    PLUS            reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    MINUS           reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    GT              reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    LT              reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    GE              reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    LE              reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    EQ              reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    NE              reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    SEMICOLON       reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    RPAREN          reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    COMMA           reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    RBRK            reduce using rule 71 (Bioperation -> Expr MINUS Expr .)
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85

  ! TIMES           [ reduce using rule 71 (Bioperation -> Expr MINUS Expr .) ]
  ! DIVIDE          [ reduce using rule 71 (Bioperation -> Expr MINUS Expr .) ]
  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 81 ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 108

    (74) Bioperation -> Expr GT Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    GT              reduce using rule 74 (Bioperation -> Expr GT Expr .)
    LT              reduce using rule 74 (Bioperation -> Expr GT Expr .)
    GE              reduce using rule 74 (Bioperation -> Expr GT Expr .)
    LE              reduce using rule 74 (Bioperation -> Expr GT Expr .)
    EQ              reduce using rule 74 (Bioperation -> Expr GT Expr .)
    NE              reduce using rule 74 (Bioperation -> Expr GT Expr .)
    SEMICOLON       reduce using rule 74 (Bioperation -> Expr GT Expr .)
    RPAREN          reduce using rule 74 (Bioperation -> Expr GT Expr .)
    COMMA           reduce using rule 74 (Bioperation -> Expr GT Expr .)
    RBRK            reduce using rule 74 (Bioperation -> Expr GT Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85

  ! PLUS            [ reduce using rule 74 (Bioperation -> Expr GT Expr .) ]
  ! MINUS           [ reduce using rule 74 (Bioperation -> Expr GT Expr .) ]
  ! TIMES           [ reduce using rule 74 (Bioperation -> Expr GT Expr .) ]
  ! DIVIDE          [ reduce using rule 74 (Bioperation -> Expr GT Expr .) ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 109

    (79) Bioperation -> Expr NE Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    EQ              reduce using rule 79 (Bioperation -> Expr NE Expr .)
    NE              reduce using rule 79 (Bioperation -> Expr NE Expr .)
    SEMICOLON       reduce using rule 79 (Bioperation -> Expr NE Expr .)
    RPAREN          reduce using rule 79 (Bioperation -> Expr NE Expr .)
    COMMA           reduce using rule 79 (Bioperation -> Expr NE Expr .)
    RBRK            reduce using rule 79 (Bioperation -> Expr NE Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87

  ! PLUS            [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! MINUS           [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! TIMES           [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! DIVIDE          [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! GT              [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! LT              [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! GE              [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! LE              [ reduce using rule 79 (Bioperation -> Expr NE Expr .) ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 110

    (70) Bioperation -> Expr PLUS Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    PLUS            reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    MINUS           reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    GT              reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    LT              reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    GE              reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    LE              reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    EQ              reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    NE              reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    SEMICOLON       reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    RPAREN          reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    COMMA           reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    RBRK            reduce using rule 70 (Bioperation -> Expr PLUS Expr .)
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85

  ! TIMES           [ reduce using rule 70 (Bioperation -> Expr PLUS Expr .) ]
  ! DIVIDE          [ reduce using rule 70 (Bioperation -> Expr PLUS Expr .) ]
  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 81 ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 111

    (73) Bioperation -> Expr DIVIDE Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    PLUS            reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    MINUS           reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    TIMES           reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    DIVIDE          reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    GT              reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    LT              reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    GE              reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    LE              reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    EQ              reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    NE              reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    SEMICOLON       reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    RPAREN          reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    COMMA           reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)
    RBRK            reduce using rule 73 (Bioperation -> Expr DIVIDE Expr .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 91 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 112

    (75) Bioperation -> Expr LT Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    GT              reduce using rule 75 (Bioperation -> Expr LT Expr .)
    LT              reduce using rule 75 (Bioperation -> Expr LT Expr .)
    GE              reduce using rule 75 (Bioperation -> Expr LT Expr .)
    LE              reduce using rule 75 (Bioperation -> Expr LT Expr .)
    EQ              reduce using rule 75 (Bioperation -> Expr LT Expr .)
    NE              reduce using rule 75 (Bioperation -> Expr LT Expr .)
    SEMICOLON       reduce using rule 75 (Bioperation -> Expr LT Expr .)
    RPAREN          reduce using rule 75 (Bioperation -> Expr LT Expr .)
    COMMA           reduce using rule 75 (Bioperation -> Expr LT Expr .)
    RBRK            reduce using rule 75 (Bioperation -> Expr LT Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85

  ! PLUS            [ reduce using rule 75 (Bioperation -> Expr LT Expr .) ]
  ! MINUS           [ reduce using rule 75 (Bioperation -> Expr LT Expr .) ]
  ! TIMES           [ reduce using rule 75 (Bioperation -> Expr LT Expr .) ]
  ! DIVIDE          [ reduce using rule 75 (Bioperation -> Expr LT Expr .) ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 113

    (77) Bioperation -> Expr LE Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    GT              reduce using rule 77 (Bioperation -> Expr LE Expr .)
    LT              reduce using rule 77 (Bioperation -> Expr LE Expr .)
    GE              reduce using rule 77 (Bioperation -> Expr LE Expr .)
    LE              reduce using rule 77 (Bioperation -> Expr LE Expr .)
    EQ              reduce using rule 77 (Bioperation -> Expr LE Expr .)
    NE              reduce using rule 77 (Bioperation -> Expr LE Expr .)
    SEMICOLON       reduce using rule 77 (Bioperation -> Expr LE Expr .)
    RPAREN          reduce using rule 77 (Bioperation -> Expr LE Expr .)
    COMMA           reduce using rule 77 (Bioperation -> Expr LE Expr .)
    RBRK            reduce using rule 77 (Bioperation -> Expr LE Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85

  ! PLUS            [ reduce using rule 77 (Bioperation -> Expr LE Expr .) ]
  ! MINUS           [ reduce using rule 77 (Bioperation -> Expr LE Expr .) ]
  ! TIMES           [ reduce using rule 77 (Bioperation -> Expr LE Expr .) ]
  ! DIVIDE          [ reduce using rule 77 (Bioperation -> Expr LE Expr .) ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 114

    (78) Bioperation -> Expr EQ Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    EQ              reduce using rule 78 (Bioperation -> Expr EQ Expr .)
    NE              reduce using rule 78 (Bioperation -> Expr EQ Expr .)
    SEMICOLON       reduce using rule 78 (Bioperation -> Expr EQ Expr .)
    RPAREN          reduce using rule 78 (Bioperation -> Expr EQ Expr .)
    COMMA           reduce using rule 78 (Bioperation -> Expr EQ Expr .)
    RBRK            reduce using rule 78 (Bioperation -> Expr EQ Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87

  ! PLUS            [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! MINUS           [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! TIMES           [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! DIVIDE          [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! GT              [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! LT              [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! GE              [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! LE              [ reduce using rule 78 (Bioperation -> Expr EQ Expr .) ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 115

    (76) Bioperation -> Expr GE Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    GT              reduce using rule 76 (Bioperation -> Expr GE Expr .)
    LT              reduce using rule 76 (Bioperation -> Expr GE Expr .)
    GE              reduce using rule 76 (Bioperation -> Expr GE Expr .)
    LE              reduce using rule 76 (Bioperation -> Expr GE Expr .)
    EQ              reduce using rule 76 (Bioperation -> Expr GE Expr .)
    NE              reduce using rule 76 (Bioperation -> Expr GE Expr .)
    SEMICOLON       reduce using rule 76 (Bioperation -> Expr GE Expr .)
    RPAREN          reduce using rule 76 (Bioperation -> Expr GE Expr .)
    COMMA           reduce using rule 76 (Bioperation -> Expr GE Expr .)
    RBRK            reduce using rule 76 (Bioperation -> Expr GE Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85

  ! PLUS            [ reduce using rule 76 (Bioperation -> Expr GE Expr .) ]
  ! MINUS           [ reduce using rule 76 (Bioperation -> Expr GE Expr .) ]
  ! TIMES           [ reduce using rule 76 (Bioperation -> Expr GE Expr .) ]
  ! DIVIDE          [ reduce using rule 76 (Bioperation -> Expr GE Expr .) ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 116

    (72) Bioperation -> Expr TIMES Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    PLUS            reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    MINUS           reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    TIMES           reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    DIVIDE          reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    GT              reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    LT              reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    GE              reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    LE              reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    EQ              reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    NE              reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    SEMICOLON       reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    RPAREN          reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    COMMA           reduce using rule 72 (Bioperation -> Expr TIMES Expr .)
    RBRK            reduce using rule 72 (Bioperation -> Expr TIMES Expr .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 81 ]
  ! TIMES           [ shift and go to state 91 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! GT              [ shift and go to state 82 ]
  ! LT              [ shift and go to state 86 ]
  ! GE              [ shift and go to state 89 ]
  ! LE              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 88 ]
  ! NE              [ shift and go to state 83 ]


state 117

    (68) Expr -> LPAREN Expr RPAREN .

    PLUS            reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    MINUS           reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    TIMES           reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    DIVIDE          reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    GT              reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    LT              reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    GE              reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    LE              reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    EQ              reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    NE              reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    RPAREN          reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    COMMA           reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)
    RBRK            reduce using rule 68 (Expr -> LPAREN Expr RPAREN .)


state 118

    (67) Expr -> ID LBRK Expr . RBRK
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RBRK            shift and go to state 127
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 119

    (44) IfStmt -> IF LPAREN Expr RPAREN . Stmt
    (45) IfStmt -> IF LPAREN Expr RPAREN . Stmt ELSE Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 128
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 120

    (37) Call -> ID LPAREN ArgList RPAREN .

    SEMICOLON       reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    PLUS            reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    MINUS           reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    TIMES           reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    DIVIDE          reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    GT              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    LT              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    GE              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    LE              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    EQ              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    NE              reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    RPAREN          reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    COMMA           reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)
    RBRK            reduce using rule 37 (Call -> ID LPAREN ArgList RPAREN .)


state 121

    (81) ArgList -> ArgList COMMA . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Expr                           shift and go to state 129
    Unop                           shift and go to state 62
    Call                           shift and go to state 67
    Bioperation                    shift and go to state 61

state 122

    (35) Assign -> ID LBRK Expr RBRK . EQUALS Expr

    EQUALS          shift and go to state 130


state 123

    (42) WhileStmt -> DO Stmt WHILE LPAREN . Expr RPAREN
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Call                           shift and go to state 67
    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 131

state 124

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON . Expr SEMICOLON Assign RPAREN Stmt
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 132
    Call                           shift and go to state 67

state 125

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN . LBRACE CaseList RBRACE

    LBRACE          shift and go to state 133


state 126

    (41) WhileStmt -> WHILE LPAREN Expr RPAREN . Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 134
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 127

    (67) Expr -> ID LBRK Expr RBRK .

    PLUS            reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    MINUS           reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    TIMES           reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    DIVIDE          reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    GT              reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    LT              reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    GE              reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    LE              reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    EQ              reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    NE              reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    SEMICOLON       reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    RPAREN          reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    COMMA           reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)
    RBRK            reduce using rule 67 (Expr -> ID LBRK Expr RBRK .)


state 128

    (44) IfStmt -> IF LPAREN Expr RPAREN Stmt .
    (45) IfStmt -> IF LPAREN Expr RPAREN Stmt . ELSE Stmt

  ! shift/reduce conflict for ELSE resolved as shift
    SEMICOLON       reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    RETURN          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    WHILE           reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    DO              reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    FOR             reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    IF              reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    SWITCH          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    LBRACE          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    ID              reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    RBRACE          reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    BREAK           reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    CASE            reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    DEFAULT         reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .)
    ELSE            shift and go to state 135

  ! ELSE            [ reduce using rule 44 (IfStmt -> IF LPAREN Expr RPAREN Stmt .) ]


state 129

    (81) ArgList -> ArgList COMMA Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RPAREN          reduce using rule 81 (ArgList -> ArgList COMMA Expr .)
    COMMA           reduce using rule 81 (ArgList -> ArgList COMMA Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 130

    (35) Assign -> ID LBRK Expr RBRK EQUALS . Expr
    (61) Expr -> . Unop
    (62) Expr -> . Bioperation
    (63) Expr -> . Call
    (64) Expr -> . INTNUM
    (65) Expr -> . FLOATNUM
    (66) Expr -> . ID
    (67) Expr -> . ID LBRK Expr RBRK
    (68) Expr -> . LPAREN Expr RPAREN
    (69) Unop -> . MINUS Expr
    (70) Bioperation -> . Expr PLUS Expr
    (71) Bioperation -> . Expr MINUS Expr
    (72) Bioperation -> . Expr TIMES Expr
    (73) Bioperation -> . Expr DIVIDE Expr
    (74) Bioperation -> . Expr GT Expr
    (75) Bioperation -> . Expr LT Expr
    (76) Bioperation -> . Expr GE Expr
    (77) Bioperation -> . Expr LE Expr
    (78) Bioperation -> . Expr EQ Expr
    (79) Bioperation -> . Expr NE Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    INTNUM          shift and go to state 66
    FLOATNUM        shift and go to state 59
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    MINUS           shift and go to state 65

    Unop                           shift and go to state 62
    Bioperation                    shift and go to state 61
    Expr                           shift and go to state 136
    Call                           shift and go to state 67

state 131

    (42) WhileStmt -> DO Stmt WHILE LPAREN Expr . RPAREN
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    RPAREN          shift and go to state 137
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 132

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr . SEMICOLON Assign RPAREN Stmt
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    SEMICOLON       shift and go to state 138
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 133

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE . CaseList RBRACE
    (47) CaseList -> . CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> . CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (49) CaseList -> . CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (50) CaseList -> . CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList
    (51) CaseList -> . CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON
    (52) CaseList -> . CaseList CASE INTNUM COLON StmtList
    (53) CaseList -> . CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (54) CaseList -> . CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (55) CaseList -> . CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (56) CaseList -> . CASE INTNUM COLON StmtList DEFAULT COLON StmtList
    (57) CaseList -> . CASE INTNUM COLON StmtList BREAK SEMICOLON
    (58) CaseList -> . CASE INTNUM COLON StmtList
    (59) CaseList -> . DEFAULT COLON StmtList BREAK SEMICOLON
    (60) CaseList -> . DEFAULT COLON StmtList

    CASE            shift and go to state 139
    DEFAULT         shift and go to state 141

    CaseList                       shift and go to state 140

state 134

    (41) WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .

    ELSE            reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    SEMICOLON       reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    RETURN          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    WHILE           reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    DO              reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    FOR             reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    IF              reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    SWITCH          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    LBRACE          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    ID              reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    RBRACE          reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    BREAK           reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    CASE            reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)
    DEFAULT         reduce using rule 41 (WhileStmt -> WHILE LPAREN Expr RPAREN Stmt .)


state 135

    (45) IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE . Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 142
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 136

    (35) Assign -> ID LBRK Expr RBRK EQUALS Expr .
    (70) Bioperation -> Expr . PLUS Expr
    (71) Bioperation -> Expr . MINUS Expr
    (72) Bioperation -> Expr . TIMES Expr
    (73) Bioperation -> Expr . DIVIDE Expr
    (74) Bioperation -> Expr . GT Expr
    (75) Bioperation -> Expr . LT Expr
    (76) Bioperation -> Expr . GE Expr
    (77) Bioperation -> Expr . LE Expr
    (78) Bioperation -> Expr . EQ Expr
    (79) Bioperation -> Expr . NE Expr

    SEMICOLON       reduce using rule 35 (Assign -> ID LBRK Expr RBRK EQUALS Expr .)
    RPAREN          reduce using rule 35 (Assign -> ID LBRK Expr RBRK EQUALS Expr .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 81
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 85
    GT              shift and go to state 82
    LT              shift and go to state 86
    GE              shift and go to state 89
    LE              shift and go to state 87
    EQ              shift and go to state 88
    NE              shift and go to state 83


state 137

    (42) WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .

    ELSE            reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    RETURN          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    WHILE           reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    DO              reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    FOR             reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    IF              reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    SWITCH          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    LBRACE          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    ID              reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    RBRACE          reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    BREAK           reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    CASE            reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)
    DEFAULT         reduce using rule 42 (WhileStmt -> DO Stmt WHILE LPAREN Expr RPAREN .)


state 138

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON . Assign RPAREN Stmt
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr

    ID              shift and go to state 102

    Assign                         shift and go to state 143

state 139

    (53) CaseList -> CASE . INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (54) CaseList -> CASE . INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (55) CaseList -> CASE . INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (56) CaseList -> CASE . INTNUM COLON StmtList DEFAULT COLON StmtList
    (57) CaseList -> CASE . INTNUM COLON StmtList BREAK SEMICOLON
    (58) CaseList -> CASE . INTNUM COLON StmtList

    INTNUM          shift and go to state 144


state 140

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList . RBRACE
    (47) CaseList -> CaseList . CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList . CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (49) CaseList -> CaseList . CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (50) CaseList -> CaseList . CASE INTNUM COLON StmtList DEFAULT COLON StmtList
    (51) CaseList -> CaseList . CASE INTNUM COLON StmtList BREAK SEMICOLON
    (52) CaseList -> CaseList . CASE INTNUM COLON StmtList

    RBRACE          shift and go to state 146
    CASE            shift and go to state 145


state 141

    (59) CaseList -> DEFAULT . COLON StmtList BREAK SEMICOLON
    (60) CaseList -> DEFAULT . COLON StmtList

    COLON           shift and go to state 147


state 142

    (45) IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .

    SEMICOLON       reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    RETURN          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    WHILE           reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    DO              reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    FOR             reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    IF              reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    SWITCH          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    LBRACE          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    ID              reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    RBRACE          reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    BREAK           reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    CASE            reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    DEFAULT         reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)
    ELSE            reduce using rule 45 (IfStmt -> IF LPAREN Expr RPAREN Stmt ELSE Stmt .)


state 143

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign . RPAREN Stmt

    RPAREN          shift and go to state 148


state 144

    (53) CaseList -> CASE INTNUM . COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM . COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (55) CaseList -> CASE INTNUM . COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (56) CaseList -> CASE INTNUM . COLON StmtList DEFAULT COLON StmtList
    (57) CaseList -> CASE INTNUM . COLON StmtList BREAK SEMICOLON
    (58) CaseList -> CASE INTNUM . COLON StmtList

    COLON           shift and go to state 149


state 145

    (47) CaseList -> CaseList CASE . INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE . INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (49) CaseList -> CaseList CASE . INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (50) CaseList -> CaseList CASE . INTNUM COLON StmtList DEFAULT COLON StmtList
    (51) CaseList -> CaseList CASE . INTNUM COLON StmtList BREAK SEMICOLON
    (52) CaseList -> CaseList CASE . INTNUM COLON StmtList

    INTNUM          shift and go to state 150


state 146

    (46) SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .

    SEMICOLON       reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    RETURN          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    WHILE           reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    DO              reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    FOR             reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    IF              reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    SWITCH          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    LBRACE          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    ID              reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    RBRACE          reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    BREAK           reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    DEFAULT         reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    CASE            reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)
    ELSE            reduce using rule 46 (SwitchStmt -> SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE .)


state 147

    (59) CaseList -> DEFAULT COLON . StmtList BREAK SEMICOLON
    (60) CaseList -> DEFAULT COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 151
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 37
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 148

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN . Stmt
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    IfStmt                         shift and go to state 41
    ForStmt                        shift and go to state 43
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Assign                         shift and go to state 45
    CompoundStmt                   shift and go to state 40
    AssignStmt                     shift and go to state 36
    Stmt                           shift and go to state 152

state 149

    (53) CaseList -> CASE INTNUM COLON . StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM COLON . StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (55) CaseList -> CASE INTNUM COLON . StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (56) CaseList -> CASE INTNUM COLON . StmtList DEFAULT COLON StmtList
    (57) CaseList -> CASE INTNUM COLON . StmtList BREAK SEMICOLON
    (58) CaseList -> CASE INTNUM COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    DEFAULT         reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 153
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 37
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 150

    (47) CaseList -> CaseList CASE INTNUM . COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM . COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (49) CaseList -> CaseList CASE INTNUM . COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (50) CaseList -> CaseList CASE INTNUM . COLON StmtList DEFAULT COLON StmtList
    (51) CaseList -> CaseList CASE INTNUM . COLON StmtList BREAK SEMICOLON
    (52) CaseList -> CaseList CASE INTNUM . COLON StmtList

    COLON           shift and go to state 154


state 151

    (59) CaseList -> DEFAULT COLON StmtList . BREAK SEMICOLON
    (60) CaseList -> DEFAULT COLON StmtList .

    BREAK           shift and go to state 155
    RBRACE          reduce using rule 60 (CaseList -> DEFAULT COLON StmtList .)
    CASE            reduce using rule 60 (CaseList -> DEFAULT COLON StmtList .)


state 152

    (43) ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .

    SEMICOLON       reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    RETURN          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    WHILE           reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    DO              reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    FOR             reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    IF              reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    SWITCH          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    LBRACE          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    ID              reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    BREAK           reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    DEFAULT         reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    RBRACE          reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    CASE            reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)
    ELSE            reduce using rule 43 (ForStmt -> FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt .)


state 153

    (53) CaseList -> CASE INTNUM COLON StmtList . BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM COLON StmtList . BREAK SEMICOLON DEFAULT COLON StmtList
    (55) CaseList -> CASE INTNUM COLON StmtList . DEFAULT COLON StmtList BREAK SEMICOLON
    (56) CaseList -> CASE INTNUM COLON StmtList . DEFAULT COLON StmtList
    (57) CaseList -> CASE INTNUM COLON StmtList . BREAK SEMICOLON
    (58) CaseList -> CASE INTNUM COLON StmtList .

    BREAK           shift and go to state 156
    DEFAULT         shift and go to state 157
    RBRACE          reduce using rule 58 (CaseList -> CASE INTNUM COLON StmtList .)
    CASE            reduce using rule 58 (CaseList -> CASE INTNUM COLON StmtList .)


state 154

    (47) CaseList -> CaseList CASE INTNUM COLON . StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM COLON . StmtList BREAK SEMICOLON DEFAULT COLON StmtList
    (49) CaseList -> CaseList CASE INTNUM COLON . StmtList DEFAULT COLON StmtList BREAK SEMICOLON
    (50) CaseList -> CaseList CASE INTNUM COLON . StmtList DEFAULT COLON StmtList
    (51) CaseList -> CaseList CASE INTNUM COLON . StmtList BREAK SEMICOLON
    (52) CaseList -> CaseList CASE INTNUM COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    DEFAULT         reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Stmt                           shift and go to state 37
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 158
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Assign                         shift and go to state 45
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 155

    (59) CaseList -> DEFAULT COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 159


state 156

    (53) CaseList -> CASE INTNUM COLON StmtList BREAK . SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM COLON StmtList BREAK . SEMICOLON DEFAULT COLON StmtList
    (57) CaseList -> CASE INTNUM COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 160


state 157

    (55) CaseList -> CASE INTNUM COLON StmtList DEFAULT . COLON StmtList BREAK SEMICOLON
    (56) CaseList -> CASE INTNUM COLON StmtList DEFAULT . COLON StmtList

    COLON           shift and go to state 161


state 158

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList . BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM COLON StmtList . BREAK SEMICOLON DEFAULT COLON StmtList
    (49) CaseList -> CaseList CASE INTNUM COLON StmtList . DEFAULT COLON StmtList BREAK SEMICOLON
    (50) CaseList -> CaseList CASE INTNUM COLON StmtList . DEFAULT COLON StmtList
    (51) CaseList -> CaseList CASE INTNUM COLON StmtList . BREAK SEMICOLON
    (52) CaseList -> CaseList CASE INTNUM COLON StmtList .

    BREAK           shift and go to state 162
    DEFAULT         shift and go to state 163
    RBRACE          reduce using rule 52 (CaseList -> CaseList CASE INTNUM COLON StmtList .)
    CASE            reduce using rule 52 (CaseList -> CaseList CASE INTNUM COLON StmtList .)


state 159

    (59) CaseList -> DEFAULT COLON StmtList BREAK SEMICOLON .

    RBRACE          reduce using rule 59 (CaseList -> DEFAULT COLON StmtList BREAK SEMICOLON .)
    CASE            reduce using rule 59 (CaseList -> DEFAULT COLON StmtList BREAK SEMICOLON .)


state 160

    (53) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON . DEFAULT COLON StmtList BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON . DEFAULT COLON StmtList
    (57) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON .

    DEFAULT         shift and go to state 164
    RBRACE          reduce using rule 57 (CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON .)
    CASE            reduce using rule 57 (CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON .)


state 161

    (55) CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON . StmtList BREAK SEMICOLON
    (56) CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 165
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 37
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 162

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK . SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK . SEMICOLON DEFAULT COLON StmtList
    (51) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 166


state 163

    (49) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT . COLON StmtList BREAK SEMICOLON
    (50) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT . COLON StmtList

    COLON           shift and go to state 167


state 164

    (53) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT . COLON StmtList BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT . COLON StmtList

    COLON           shift and go to state 168


state 165

    (55) CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList . BREAK SEMICOLON
    (56) CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList .

    BREAK           shift and go to state 169
    RBRACE          reduce using rule 56 (CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList .)
    CASE            reduce using rule 56 (CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList .)


state 166

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON . DEFAULT COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON . DEFAULT COLON StmtList
    (51) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON .

    DEFAULT         shift and go to state 170
    RBRACE          reduce using rule 51 (CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON .)
    CASE            reduce using rule 51 (CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON .)


state 167

    (49) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON . StmtList BREAK SEMICOLON
    (50) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Stmt                           shift and go to state 37
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 171
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Assign                         shift and go to state 45
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 168

    (53) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON . StmtList BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Assign                         shift and go to state 45
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 172
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Stmt                           shift and go to state 37
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 169

    (55) CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 173


state 170

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT . COLON StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT . COLON StmtList

    COLON           shift and go to state 174


state 171

    (49) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList . BREAK SEMICOLON
    (50) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList .

    BREAK           shift and go to state 175
    RBRACE          reduce using rule 50 (CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList .)
    CASE            reduce using rule 50 (CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList .)


state 172

    (53) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList . BREAK SEMICOLON
    (54) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList .

    BREAK           shift and go to state 176
    RBRACE          reduce using rule 54 (CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList .)
    CASE            reduce using rule 54 (CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList .)


state 173

    (55) CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON .

    RBRACE          reduce using rule 55 (CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON .)
    CASE            reduce using rule 55 (CaseList -> CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON .)


state 174

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON . StmtList BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON . StmtList
    (22) StmtList -> . Stmt StmtList
    (23) StmtList -> .
    (24) Stmt -> . AssignStmt
    (25) Stmt -> . CallStmt
    (26) Stmt -> . RetStmt
    (27) Stmt -> . WhileStmt
    (28) Stmt -> . ForStmt
    (29) Stmt -> . IfStmt
    (30) Stmt -> . SwitchStmt
    (31) Stmt -> . CompoundStmt
    (32) Stmt -> . SEMICOLON
    (33) AssignStmt -> . Assign SEMICOLON
    (36) CallStmt -> . Call SEMICOLON
    (39) RetStmt -> . RETURN SEMICOLON
    (40) RetStmt -> . RETURN Expr SEMICOLON
    (41) WhileStmt -> . WHILE LPAREN Expr RPAREN Stmt
    (42) WhileStmt -> . DO Stmt WHILE LPAREN Expr RPAREN
    (43) ForStmt -> . FOR LPAREN Assign SEMICOLON Expr SEMICOLON Assign RPAREN Stmt
    (44) IfStmt -> . IF LPAREN Expr RPAREN Stmt
    (45) IfStmt -> . IF LPAREN Expr RPAREN Stmt ELSE Stmt
    (46) SwitchStmt -> . SWITCH LPAREN identifier RPAREN LBRACE CaseList RBRACE
    (20) CompoundStmt -> . LBRACE DeclList StmtList RBRACE
    (21) CompoundStmt -> . LBRACE StmtList RBRACE
    (34) Assign -> . ID EQUALS Expr
    (35) Assign -> . ID LBRK Expr RBRK EQUALS Expr
    (37) Call -> . ID LPAREN ArgList RPAREN
    (38) Call -> . ID LPAREN RPAREN

    BREAK           reduce using rule 23 (StmtList -> .)
    RBRACE          reduce using rule 23 (StmtList -> .)
    CASE            reduce using rule 23 (StmtList -> .)
    SEMICOLON       shift and go to state 56
    RETURN          shift and go to state 38
    WHILE           shift and go to state 55
    DO              shift and go to state 44
    FOR             shift and go to state 48
    IF              shift and go to state 39
    SWITCH          shift and go to state 51
    LBRACE          shift and go to state 29
    ID              shift and go to state 42

    Call                           shift and go to state 52
    CallStmt                       shift and go to state 35
    AssignStmt                     shift and go to state 36
    Stmt                           shift and go to state 37
    ForStmt                        shift and go to state 43
    StmtList                       shift and go to state 177
    WhileStmt                      shift and go to state 47
    SwitchStmt                     shift and go to state 49
    RetStmt                        shift and go to state 50
    Assign                         shift and go to state 45
    CompoundStmt                   shift and go to state 40
    IfStmt                         shift and go to state 41

state 175

    (49) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 178


state 176

    (53) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 179


state 177

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList . BREAK SEMICOLON
    (48) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList .

    BREAK           shift and go to state 180
    RBRACE          reduce using rule 48 (CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList .)
    CASE            reduce using rule 48 (CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList .)


state 178

    (49) CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON .

    RBRACE          reduce using rule 49 (CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON .)
    CASE            reduce using rule 49 (CaseList -> CaseList CASE INTNUM COLON StmtList DEFAULT COLON StmtList BREAK SEMICOLON .)


state 179

    (53) CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON .

    RBRACE          reduce using rule 53 (CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON .)
    CASE            reduce using rule 53 (CaseList -> CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON .)


state 180

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK . SEMICOLON

    SEMICOLON       shift and go to state 181


state 181

    (47) CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON .

    RBRACE          reduce using rule 47 (CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON .)
    CASE            reduce using rule 47 (CaseList -> CaseList CASE INTNUM COLON StmtList BREAK SEMICOLON DEFAULT COLON StmtList BREAK SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 128 resolved as shift
